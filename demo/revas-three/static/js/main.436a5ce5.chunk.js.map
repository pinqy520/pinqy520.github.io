{"version":3,"sources":["3d/Flamingo.glb","3d/draw.ts","3d/Scene.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","mixers","clock","THREE","create","width","height","scale","camera","position","set","scene","background","setHSL","fog","hemiLight","color","groundColor","add","dirLight","multiplyScalar","castShadow","shadow","mapSize","left","right","top","bottom","far","bias","groundGeo","groundMat","setRGB","ground","y","rotation","x","Math","PI","receiveShadow","uniforms","topColor","value","bottomColor","offset","exponent","copy","skyGeo","skyMat","vertexShader","fragmentShader","side","sky","GLTFLoader","load","require","gltf","mesh","children","s","mixer","clipAction","animations","setDuration","play","push","renderer","antialias","render","delta","getDelta","i","length","update","setPixelRatio","setSize","outputEncoding","shadowMap","enabled","canvas","domElement","animate","requestAnimationFrame","resize","aspect","updateProjectionMatrix","Scene","withContext","source","drawer","createDrawer","context","clientWidth","deviceRatio","document","body","appendChild","style","opacity","pointerEvents","marginBottom","AnimatedValue","animated","setValue","drawEarth","node","flags","frame","getFrameFromNode","actualSize","clientHeight","focusPoint","max","scaledSize","sx","round","clamp","sy","sw","sh","dw","dh","dx","dy","drawImage","this","React","createElement","customDrawer","Component","rect","backgroundColor","margin","borderRadius","styles","app","flex","title","fontSize","fontWeight","textAlign","content","padding","marginLeft","marginRight","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","row","flexDirection","flexWrap","justifyContent","rect1","rect2","rect3","rect4","App","cache","Boolean","window","location","hostname","match","getElementById","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.436a5ce5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Flamingo.59fbc934.glb\";","import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\n// const offscreen = document.getElementById('offscreen')!;\n\nconst mixers: THREE.AnimationMixer[] = [];\n\nconst clock = new THREE.Clock();\n\nexport default function create(width: number, height: number, scale: number) {\n\n  const camera = new THREE.PerspectiveCamera(30, width / height, 1, 5000);\n  camera.position.set(0, 0, 250);\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color().setHSL(0.6, 0, 1);\n  scene.fog = new THREE.Fog(scene.background as any, 1, 5000);\n\n  // LIGHTS\n\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\n  hemiLight.color.setHSL(0.6, 1, 0.6);\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n  hemiLight.position.set(0, 50, 0);\n  scene.add(hemiLight);\n\n  // const hemiLightHelper = new THREE.HemisphereLightHelper(hemiLight, 10);\n  // scene.add(hemiLightHelper);\n\n\n  const dirLight = new THREE.DirectionalLight(0xaaaaaa, 1);\n  dirLight.color.setHSL(0.1, 1, 0.95);\n  dirLight.position.set(-1, 1.75, 1);\n  dirLight.position.multiplyScalar(30);\n  scene.add(dirLight);\n\n  dirLight.castShadow = true;\n\n  dirLight.shadow.mapSize.width = 2048;\n  dirLight.shadow.mapSize.height = 2048;\n\n  const d = 50;\n\n  dirLight.shadow.camera.left = -d;\n  dirLight.shadow.camera.right = d;\n  dirLight.shadow.camera.top = d;\n  dirLight.shadow.camera.bottom = -d;\n\n  dirLight.shadow.camera.far = 3500;\n  dirLight.shadow.bias = -0.0001;\n\n  // const dirLightHeper = new THREE.DirectionalLightHelper(dirLight, 10);\n  // scene.add(dirLightHeper);\n\n  // GROUND\n\n  const groundGeo = new THREE.PlaneBufferGeometry(10000, 10000);\n  const groundMat = new THREE.MeshLambertMaterial({ color: 0xaaaaaa });\n  groundMat.color.setRGB(1, 0.9, 0.75);\n\n  const ground = new THREE.Mesh(groundGeo, groundMat);\n  ground.position.y = -33;\n  ground.rotation.x = -Math.PI / 2;\n  ground.receiveShadow = true;\n  scene.add(ground);\n\n  // SKYDOME\n\n  const vertexShader = `\nvarying vec3 vWorldPosition;\n\nvoid main() {\n\n  vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n  vWorldPosition = worldPosition.xyz;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n`;\n\n  const fragmentShader = `\nuniform vec3 topColor;\nuniform vec3 bottomColor;\nuniform float offset;\nuniform float exponent;\n\nvarying vec3 vWorldPosition;\n\nvoid main() {\n\n  float h = normalize( vWorldPosition + offset ).y;\n  gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h , 0.0), exponent ), 0.0 ) ), 1.0 );\n\n}\n`;\n\n  const uniforms = {\n    topColor: { value: new THREE.Color(0x0077ff) },\n    bottomColor: { value: new THREE.Color(0xffffff) },\n    offset: { value: 33 },\n    exponent: { value: 0.6 },\n  };\n  uniforms.topColor.value.copy(hemiLight.color);\n\n  scene.fog.color.copy(uniforms.bottomColor.value);\n\n  const skyGeo = new THREE.SphereBufferGeometry(4000, 32, 15);\n  const skyMat = new THREE.ShaderMaterial({\n    uniforms,\n    vertexShader,\n    fragmentShader,\n    side: THREE.BackSide,\n  });\n\n  const sky = new THREE.Mesh(skyGeo, skyMat);\n  scene.add(sky);\n\n  // MODEL\n\n  const loader = new GLTFLoader();\n\n  loader.load(require('./Flamingo.glb'), function (gltf) {\n    const mesh = gltf.scene.children[0];\n\n    const s = 0.35;\n    mesh.scale.set(s, s, s);\n    mesh.position.y = 15;\n    mesh.rotation.y = -1;\n\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n\n    scene.add(mesh);\n\n    const mixer = new THREE.AnimationMixer(mesh);\n    mixer.clipAction(gltf.animations[0]).setDuration(1).play();\n    mixers.push(mixer);\n  });\n\n  // RENDERER\n\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setPixelRatio(scale);\n  renderer.setSize(width, height);\n  renderer.outputEncoding = THREE.sRGBEncoding;\n  renderer.shadowMap.enabled = true;\n\n  function render() {\n    const delta = clock.getDelta();\n\n    for (let i = 0; i < mixers.length; i++) {\n      mixers[i].update(delta);\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n\n\n  return {\n    canvas: renderer.domElement,\n    render, animate,\n    resize(width: number, height: number) {\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize(width, height);\n    }\n  }\n\n}","import React from 'react';\nimport { RevasCanvas, Node, getFrameFromNode, clamp, withContext, AnimatedValue } from 'revas';\nimport createDrawer from './draw';\n\n@withContext\nexport default class Scene extends React.Component {\n  source = (() => {\n    const drawer = createDrawer(this.context.clientWidth, this.context.clientWidth, this.context.deviceRatio);\n    document.body.appendChild(drawer.canvas);\n    drawer.canvas.style.opacity = '0';\n    drawer.canvas.style.pointerEvents = 'none';\n    return drawer;\n  })();\n\n  style = {\n    height: this.context.clientWidth,\n    marginBottom: -(this.context.clientWidth / 4),\n    opacity: new AnimatedValue(1),\n    animated: true,\n  };\n  componentDidMount() {\n    this.animate();\n  }\n\n  animate = () => {\n    requestAnimationFrame(this.animate);\n    this.style.opacity.setValue(1);\n  };\n\n  drawEarth = (canvas: RevasCanvas, node: Node, flags: any) => {\n    const frame = getFrameFromNode(node);\n    const { width, height, x, y } = frame;\n    if (width <= 0 || height <= 0) {\n      return;\n    }\n\n    const actualSize = {\n      width: this.source.canvas.clientWidth * 2,\n      height: this.source.canvas.clientHeight * 2,\n    };\n\n    const focusPoint = {\n      x: actualSize.width * 0.5,\n      y: actualSize.height * 0.5,\n    };\n    const scale = Math.max(width / actualSize.width, height / actualSize.height) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale,\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sx = Math.round(clamp(width * 0.5 - focusPoint.x * scale, width - scaledSize.width, 0)) * (-1 / scale);\n    const sy = Math.round(clamp(height * 0.5 - focusPoint.y * scale, height - scaledSize.height, 0)) * (-1 / scale);\n    const sw = Math.round(actualSize.width - sx * 2);\n    const sh = Math.round(actualSize.height - sy * 2);\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(width);\n    const dh = Math.round(height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round(x);\n    const dy = Math.round(y);\n    this.source.render();\n    canvas.context.drawImage(this.source.canvas, sx, sy, sw, sh, dx, dy, dw, dh);\n  };\n  render() {\n    return React.createElement('View', {\n      customDrawer: this.drawEarth,\n      style: this.style,\n    });\n  }\n}\n","import React from 'react';\nimport { View, Text, ScrollView } from 'revas';\nimport Scene from './3d/Scene';\n\nfunction App() {\n  return (\n    <ScrollView style={styles.app}>\n      <Scene />\n      <View style={styles.content} cache>\n        <Text style={styles.title}>Revas + three.js Example</Text>\n      </View>\n      <View style={[styles.content, styles.row]} cache>\n        <View style={styles.rect1} />\n        <View style={styles.rect2} />\n        <View style={styles.rect3} />\n        <View style={styles.rect4} />\n        <View style={styles.rect1} />\n        <View style={styles.rect2} />\n        <View style={styles.rect3} />\n        <View style={styles.rect4} />\n      </View>\n    </ScrollView>\n  );\n}\n\nconst rect = {\n  width: 140,\n  height: 140,\n  backgroundColor: '#000',\n  margin: 8,\n  borderRadius: 5,\n};\n\nconst styles = {\n  app: {\n    flex: 1,\n    backgroundColor: '#f3fafc',\n  },\n  title: {\n    fontSize: 17,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  content: {\n    backgroundColor: '#fff',\n    padding: 25,\n    borderRadius: 20,\n    marginLeft: 20,\n    marginRight: 20,\n    marginBottom: 15,\n    shadowColor: 'rgba(229, 238, 252, 0.7)',\n    shadowOffsetX: 0,\n    shadowOffsetY: 20,\n    shadowBlur: 30,\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 10,\n    justifyContent: 'center',\n  },\n  rect1: {\n    ...rect,\n    backgroundColor: '#B4CCF7',\n  },\n  rect2: {\n    ...rect,\n    backgroundColor: '#F1EBD8',\n  },\n  rect3: {\n    ...rect,\n    backgroundColor: '#CA879F',\n  },\n  rect4: {\n    ...rect,\n    backgroundColor: '#708793',\n  },\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'revas';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line\nconst app = render(<App />, document.getElementById('canvas')!);\n\nwindow.addEventListener('resize', () => {\n  requestAnimationFrame(() => {\n    app.update();\n  });\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}