{"version":3,"sources":["develop/logo.png","revas/components/View.ts","revas/core/utils.ts","revas/components/common/drawText.ts","revas/components/Text.ts","revas/core/Node.ts","revas/core/reconciler.ts","revas/components/common/imageLoader.ts","revas/components/common/drawImage.ts","revas/components/Image.ts","revas/core/Animated.ts","revas/components/Touchable.ts","revas/components/common/Scroller.ts","revas/components/ScrollView.ts","revas/components/LinearGradient.ts","revas/core/css-layout/index.ts","revas/core/touch.ts","revas/core/Container.ts","revas/core/draw.ts","develop/Interactable.tsx","develop/App.tsx","develop/serviceWorker.ts","revas/web/render.ts","index.tsx","develop/createCanvas.ts"],"names":["module","exports","View","props","React","noop","EMPTY_OBJECT","Object","freeze","EMPTY_ARRAY","checkAndRemove","parent","child","index","children","indexOf","splice","appendChild","push","removeChild","insertBefore","before","beforeIndex","getStyleFromNode","node","style","getFrameFromNode","frame","sortByZIndexAscending","a","b","styleA","styleB","zIndex","sortByZIndexDescending","clamp","n","min","max","Math","ASTRAL_RANGE","WORD_RANGE","adapter","Image","DEFAULT_MEASURE","splitContent","content","wordBreak","match","str","getWords","applyTextStyle","ctx","options","textStyle","fontStyle","fontWeight","fontSize","fontFamily","textBaseline","color","font","fillStyle","measureText","lines","chars","boxWidth","numberOfLines","width","text","cursor","pushLine","charWidth","char","force","length","lastLine","measureLines","lineHeight","drawText","textShadowColor","shadowBlur","textShadowBlur","shadowColor","shadowOffsetX","textShadowOffsetX","shadowOffsetY","textShadowOffsetY","i","line","x","textAlign","fillText","y","Text","state","height","_measured","_drawed","getTextFromNode","getTextStyleFromNode","textPropsChanged","setState","this","others","customDrawer","TEXT_STYLES_LIST","DEFAULT_TEXTSTYLE","left","right","item","textStyleChanged","Array","isArray","join","Frame","Node","type","ReactReconciler","supportsHydration","supportsPersistence","supportsMutation","isPrimaryRenderer","createInstance","container","createTextInstance","Error","appendInitialChild","appendChildToContainer","removeChildFromContainer","insertInContainerBefore","finalizeInitialChildren","getPublicInstance","instance","prepareUpdate","commitUpdate","updatePayload","oldProps","newProps","prepareForCommit","resetAfterCommit","draw","resetTextContent","getRootHostContext","getChildHostContext","parentHostContext","shouldSetTextContent","shouldDeprioritizeSubtree","scheduleDeferredCallback","cancelDeferredCallback","setTimeout","clearTimeout","noTimeout","now","Date","CachedImage","src","image","targets","_ready","onload","renderer","batchedUpdates","forEach","target","onerror","cache","Map","get","has","set","cached","add","remove","empty","delete","drawImage","imageLoader","actualSize","focusPoint","resizeMode","scale","scaledSize","sw","round","sh","dw","dh","dx","dy","sx","sy","ImageView","ready","onReady","prev","AnimatedValue","_value","_observer","value","observer","observeAnimatedValue","defaultValue","getValue","getAnimatedValue","Touchable","opacity","_start","_tid","_onTouchStart","e","keys","touches","setValue","activeOpacity","_onTouchEnd","abs","onPress","onTouchStart","onTouchEnd","defaultProps","Scroller","handler","top","_lastY","_lastTimestamp","_v","touchStart","timestamp","touchMove","moveY","duration","change","touchEnd","requestAnimationFrame","afterEnd","friction","_top","vy","vx","v","ScrollView","translateY","_height","_contentHeight","_scroller","onScroll","_onLayout","_checkLayout","_onContentLayout","onTouchMove","onLayout","LinearGradient","drawGradient","colors","start","end","grad","createLinearGradient","addColorStop","fill","computeLayout","require","createYoga","map","updateLayout","root","yogas","layout","yoga","eventNodeHolder","getNodeByTouch","touch","findNodeByPoint","pointerEvents","slice","sort","translateX","identifier","LISTENER_MAP","touchstart","touchmove","touchend","Container","_next","_reflow","_ctx","handleTouch","evt","emitted","WeakSet","values","funcName","emitTouch","handleResize","reflow","clearRect","drawNode","save","globalAlpha","translate","rotate","scaleX","scaleY","originX","originY","radius","tl","borderTopLeftRadius","borderRadius","tr","borderTopRightRadius","bl","borderBottomLeftRadius","br","borderBottomRightRadius","getRadius","beginPath","moveTo","arcTo","closePath","overflow","clip","background","backgroundColor","borderColor","borderWidth","lineWidth","strokeStyle","stroke","restore","Interactable","Component","styles","flex","justifyContent","card","padding","margin","decorator","marginLeft","marginRight","title","marginBottom","paddingBottom","logo","btn","btnText","Boolean","window","location","hostname","app","canvas","getContext","clientWidth","clientHeight","ontouchstart","ontouchmove","ontouchend","ontouchcancel","changedTouches","offsetLeft","offsetTop","clientX","clientY","timeStamp","createRevasTouchEvent","onresize","fiber","createContainer","updateContainer","render","createElement","alert","position","bottom","document","innerHeight","innerWidth","devicePixelRatio","resetTransform","className","body","onorientationchange","createCanvas","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.eed49f3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.48529616.png\";","import * as React from 'react'\nimport { NodeProps } from '../core/Node'\n\nexport default function View(props: NodeProps) {\n  return React.createElement('View', props)\n}","import { Node } from './Node'\n\nexport function noop(): any { }\nexport const EMPTY_OBJECT = Object.freeze({})\nexport const EMPTY_ARRAY = Object.freeze([])\n\nfunction checkAndRemove(parent: Node, child: Node) {\n  const index = parent.children.indexOf(child);\n  if (index >= 0) {\n    parent.children.splice(index, 1);\n  }\n}\n\nexport function appendChild(parent: Node, child: Node) {\n  checkAndRemove(parent, child)\n  parent.children.push(child);\n  child.parent = parent\n}\n\nexport function removeChild(parent: Node, child: Node) {\n  checkAndRemove(parent, child)\n  child.parent = void 0\n}\n\nexport function insertBefore(parent: Node, child: Node, before: Node) {\n  checkAndRemove(parent, child)\n  const beforeIndex = parent.children.indexOf(before);\n  parent.children.splice(beforeIndex, 0, child);\n  child.parent = parent\n}\n\nexport function getStyleFromNode(node: Node) {\n  const { props: { style = EMPTY_OBJECT } } = node\n  return style\n}\n\nexport function getFrameFromNode(node: Node) {\n  const { frame } = node\n  return frame\n}\n\nexport function sortByZIndexAscending(a: Node, b: Node) {\n  const styleA = getStyleFromNode(a)\n  const styleB = getStyleFromNode(b)\n  return (styleA.zIndex || 0) - (styleB.zIndex || 0);\n}\n\nexport function sortByZIndexDescending(a: Node, b: Node) {\n  return -sortByZIndexAscending(a, b)\n}\n\n\nexport function clamp(n: number, min: number, max: number) {\n  return Math.min(Math.max(n, min), max);\n};\n\nconst ASTRAL_RANGE = /\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g\nconst WORD_RANGE = /\\w+|\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nexport function getChars(str: string): readonly string[] {\n  return str.match(ASTRAL_RANGE) || EMPTY_ARRAY\n}\n\nexport function getWords(str: string): readonly string[] {\n  return str.match(WORD_RANGE) || EMPTY_ARRAY\n}\n\nexport type RevasAdapter = {\n  createImage: () => HTMLImageElement\n  createOffscreenCanvas?: () => HTMLCanvasElement\n}\n\nexport const adapter: RevasAdapter = {\n  createImage: () => new Image(),\n}","import { Frame } from \"../../core/Node\"\nimport { getChars, getWords } from \"../../core/utils\"\n\nexport interface DrawTextOptions {\n  textStyle: any,\n  numberOfLines: number,\n  frame: Frame,\n  content: string\n}\n\nexport type MeasureLine = { width: number, text: string }\n\nexport type MeasureResult = [MeasureLine[], number]\n\nexport const DEFAULT_MEASURE: MeasureResult = [[], 0]\n\nfunction measureLines(\n  ctx: CanvasRenderingContext2D,\n  chars: readonly string[],\n  boxWidth: number,\n  numberOfLines: number\n) {\n  const lines: MeasureLine[] = []\n  let width = 0\n  let text = ''\n  let cursor = -1\n  function pushLine(charWidth = 0, char = '', force = false) {\n    if (force || text) lines.push({ width, text })\n    if (cursor < chars.length && numberOfLines > 0 && lines.length >= numberOfLines) {\n      const lastLine = lines[lines.length - 1]\n      lastLine.text = lastLine.text + '...'\n      lastLine.width = ctx.measureText(lastLine.text).width\n      cursor = chars.length + 1\n    } else {\n      width = charWidth\n      text = char\n    }\n  }\n  while (cursor++ <= chars.length) {\n    if (chars.length > cursor) {\n      const char = chars[cursor]\n      if (char === '\\n') {\n        pushLine(0, '', true)\n      } else {\n        const charWidth = ctx.measureText(char).width\n        if (charWidth + width > boxWidth) {\n          pushLine(charWidth, char)\n        } else {\n          width += charWidth\n          text += char\n        }\n      }\n    } else {\n      pushLine()\n    }\n  }\n  return lines\n}\n\nfunction splitContent(content: string, wordBreak: string) {\n  switch (wordBreak) {\n    case 'break-all':\n      return getChars(content)\n    case 'keep-all':\n      return [content]\n    default:\n      return getWords(content)\n  }\n}\n\nexport function applyTextStyle(ctx: CanvasRenderingContext2D, options: DrawTextOptions) {\n  const { fontStyle, fontWeight, fontSize, fontFamily, textBaseline, color } = options.textStyle\n  // Apply Styles\n  ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`\n  ctx.fillStyle = color\n  ctx.textBaseline = textBaseline\n}\n\nexport function measureText(ctx: CanvasRenderingContext2D, options: DrawTextOptions): MeasureResult {\n\n  const lines = measureLines(\n    ctx,\n    splitContent(options.content, options.textStyle.wordBreak),\n    options.frame.width,\n    options.numberOfLines\n  )\n  return [lines, options.textStyle.lineHeight * lines.length]\n}\n\n\nexport function drawText(ctx: CanvasRenderingContext2D, options: DrawTextOptions, lines: MeasureLine[]) {\n  const { textStyle: style, frame } = options\n\n  // Shadow:\n  if (style.textShadowColor) {\n    ctx.shadowBlur = style.textShadowBlur;\n    ctx.shadowColor = style.textShadowColor;\n    ctx.shadowOffsetX = style.textShadowOffsetX;\n    ctx.shadowOffsetY = style.textShadowOffsetY;\n  }\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i]\n    let x = frame.x\n    switch (style.textAlign) {\n      case 'center':\n        x = x + (frame.width / 2) - (line.width / 2);\n        break;\n      case 'right':\n        x = x + frame.width - line.width;\n        break;\n    }\n    ctx.fillText(line.text, x, style.lineHeight * (i + 0.5) + frame.y);\n  }\n}\n","import * as React from 'react'\nimport {\n  drawText, measureText, applyTextStyle,\n  DrawTextOptions, DEFAULT_MEASURE\n} from './common/drawText'\nimport { NodeProps, Node } from '../core/Node'\nimport { getFrameFromNode } from '../core/utils'\n\nexport type TextProps = {\n  numberOfLines?: number\n} & NodeProps\n\nexport default class Text extends React.Component<TextProps> {\n  state = { height: 0 }\n\n  _measured = DEFAULT_MEASURE\n\n  _drawed?: DrawTextOptions\n\n  drawText = (ctx: CanvasRenderingContext2D, node: Node) => {\n    const content = getTextFromNode(node)\n    if (content) {\n      const options = {\n        numberOfLines: node.props.numberOfLines || 0,\n        textStyle: getTextStyleFromNode(node),\n        frame: getFrameFromNode(node),\n        content,\n      }\n      applyTextStyle(ctx, options)\n      if (textPropsChanged(options, this._drawed)) {\n        this._measured = measureText(ctx, options)\n        this._drawed = options\n      }\n      const [lines, height] = this._measured\n      if (height !== this.state.height) {\n        this.setState({ height })\n      } else {\n        drawText(ctx, options, lines)\n      }\n    }\n  }\n  render() {\n    const { children, numberOfLines, ...others } = this.props as any\n    return React.createElement('View', others,\n      React.createElement('Text', {\n        content: children,\n        customDrawer: this.drawText,\n        textStyle: others.style,\n        style: this.state,\n        numberOfLines\n      })\n    )\n  }\n}\n\nconst TEXT_STYLES_LIST = [\n  'fontStyle',\n  'fontWeight',\n  'fontSize',\n  'fontFamily',\n  'textBaseline',\n  'wordBreak',\n  'lineHeight'\n]\n\nconst DEFAULT_TEXTSTYLE = {\n  fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\",\n  fontWeight: 'normal',\n  fontSize: 14,\n  color: '#000',\n  fontStyle: 'normal',\n  textBaseline: 'middle',\n}\n\nfunction textStyleChanged(left: any, right: any) {\n  for (let i = 0; i < TEXT_STYLES_LIST.length; i++) {\n    const item = TEXT_STYLES_LIST[i]\n    if (left[item] !== right[item]) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction textPropsChanged(left: DrawTextOptions, right?: DrawTextOptions) {\n  if (!right) return true\n  if (left.content !== right.content)\n    return true\n  if (left.numberOfLines !== right.numberOfLines)\n    return true\n  if (left.frame.width !== right.frame.width)\n    return true\n  return textStyleChanged(left.textStyle, right.textStyle)\n}\n\nfunction getTextFromNode(node: Node) {\n  const frame = getFrameFromNode(node)\n  if (frame.width > 0) {\n    const { content } = node.props\n    if (typeof content === 'string') {\n      return content\n    } else if (Array.isArray(content)) {\n      return content.join('')\n    }\n  }\n  return ''\n}\n\nfunction getTextStyleFromNode(node: Node) {\n  const style = { ...DEFAULT_TEXTSTYLE, ...node.props.textStyle }\n  style.lineHeight = style.lineHeight || (style.fontSize * 1.1)\n  return style\n}\n// TODO: nested text support","import { ReactNode } from 'react'\n\n\nexport class Frame {\n  constructor(\n    public x = 0,\n    public y = 0,\n    public width = 0,\n    public height = 0\n  ) { }\n}\n\nexport class Node {\n  public readonly children: Node[] = []\n  public frame = new Frame()\n  public parent?: Node\n  constructor(\n    public readonly type: string,\n    public props: NodeProps & any,\n  ) { }\n}\n\nexport interface RevasTouch {\n  identifier: number,\n  x: number,\n  y: number,\n}\n\nexport type RevasTouchType = 'touchstart' | 'touchmove' | 'touchend'\n\nexport interface RevasTouchEvent {\n  type: RevasTouchType\n  touches: { [key: number]: RevasTouch }\n  timestamp: number\n}\n\nexport type RevasTouchEventListener = (event: RevasTouchEvent) => any\n\nexport interface BaseProps {\n  children?: ReactNode,\n  style?: any,\n}\n\nexport interface NodeProps extends BaseProps {\n  onTouchStart?: RevasTouchEventListener\n  onTouchMove?: RevasTouchEventListener\n  onTouchEnd?: RevasTouchEventListener\n  onLayout?: (frame: Frame) => any\n  pointerEvents?: 'auto' | 'none' | 'box-none'\n}","import ReactReconciler from 'react-reconciler';\nimport { Node } from './Node'\nimport { appendChild, noop, removeChild, insertBefore } from './utils'\nimport { Container } from './Container';\n\nexport default ReactReconciler({\n  supportsHydration: false,\n  supportsPersistence: false,\n  supportsMutation: true,\n  isPrimaryRenderer: true,\n\n  createInstance(type: string, props: any, container: Container) {\n    return new Node(type, props);\n  },\n\n  createTextInstance() {\n    throw new Error('Revas: string cannot be child out of <Text/>')\n  },\n\n  appendInitialChild: appendChild,\n  appendChild: appendChild,\n  appendChildToContainer: appendChild,\n  removeChild: removeChild,\n  removeChildFromContainer: removeChild,\n  insertBefore: insertBefore,\n  insertInContainerBefore: insertBefore,\n\n  finalizeInitialChildren() {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareUpdate() {\n    return true;\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.props = newProps\n  },\n\n  prepareForCommit: noop,\n\n  resetAfterCommit(container: Container) {\n    container.draw(true)\n  },\n\n  resetTextContent: noop,\n\n  getRootHostContext() {\n    return {}\n  },\n\n  getChildHostContext(parentHostContext: object) {\n    return parentHostContext;\n  },\n\n  shouldSetTextContent() {\n    return false\n  },\n\n  shouldDeprioritizeSubtree: () => false,\n\n  scheduleDeferredCallback: noop,\n  cancelDeferredCallback: noop,\n  setTimeout: setTimeout,\n  clearTimeout: clearTimeout,\n  noTimeout: -1,\n  now: Date.now,\n})\n","import { adapter } from '../../core/utils'\nimport renderer from '../../core/reconciler'\n\nclass CachedImage {\n  readonly image = adapter.createImage()\n  private readonly targets: Function[] = []\n  private _ready = false\n  get empty() {\n    return this.targets.length === 0\n  }\n  constructor(\n    public readonly src: string\n  ) {\n    if (!this.image) {\n      throw new Error('Revas: createImage must be initialized')\n    }\n    this.image.onload = this.onload\n    this.image.onerror = this.onerror\n    this.image.src = src\n  }\n  onload = () => {\n    this._ready = true\n    renderer.batchedUpdates(() => {\n      this.targets.forEach(target => target(this.image))\n    })\n  }\n  onerror = () => { }\n  add(target: Function) {\n    if (this.targets.indexOf(target) < 0) {\n      this.targets.push(target)\n      if (this._ready) {\n        target(this.image)\n      }\n    }\n  }\n  remove(target: Function) {\n    const index = this.targets.indexOf(target)\n    this.targets.splice(index, 1)\n  }\n}\n\nconst cache = new Map<string, CachedImage>()\n\n\nexport function get(src: string, target?: Function) {\n  if (!cache.has(src)) {\n    cache.set(src, new CachedImage(src))\n  }\n  const cached = cache.get(src)!\n  target && cached.add(target)\n  return cached.image\n}\n\nexport function remove(src: string, target: Function) {\n  if (cache.has(src)) {\n    const cached = cache.get(src)!\n    cached.remove(target)\n    if (cached.empty) {\n      cache.delete(src)\n    }\n  }\n}","import { Node } from '../../core/Node'\nimport * as imageLoader from './imageLoader'\nimport { clamp, getStyleFromNode, getFrameFromNode } from '../../core/utils'\n\nexport default function drawImage(ctx: CanvasRenderingContext2D, node: Node) {\n  const image = imageLoader.get(node.props.src)\n  if (image.height <= 0) return\n  const frame = getFrameFromNode(node)\n  const { width, height, x, y } = frame\n  if (width <= 0 || height <= 0) return\n  const style = getStyleFromNode(node)\n\n\n  const actualSize = {\n    width: image.width,\n    height: image.height\n  };\n\n  const focusPoint = style.focusPoint || {\n    x: actualSize.width * 0.5,\n    y: actualSize.height * 0.5\n  };\n\n  if (style.resizeMode === 'contain') {\n\n    const scale = Math.min(\n      width / actualSize.width,\n      height / actualSize.height\n    ) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sw = Math.round(actualSize.width);\n    const sh = Math.round(actualSize.height);\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(scaledSize.width);\n    const dh = Math.round(scaledSize.height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round((width - scaledSize.width) / 2 + x);\n    const dy = Math.round((height - scaledSize.height) / 2 + y);\n\n    ctx.drawImage(image, 0, 0, sw, sh, dx, dy, dw, dh);\n  } else {\n\n    const scale = Math.max(\n      width / actualSize.width,\n      height / actualSize.height\n    ) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sx = Math.round(clamp(width * 0.5 - focusPoint.x * scale, width - scaledSize.width, 0)) * (-1 / scale);\n    const sy = Math.round(clamp(height * 0.5 - focusPoint.y * scale, height - scaledSize.height, 0)) * (-1 / scale);\n    const sw = Math.round(actualSize.width - (sx * 2));\n    const sh = Math.round(actualSize.height - (sy * 2));\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(width);\n    const dh = Math.round(height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round(x);\n    const dy = Math.round(y);\n\n    ctx.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n\n  }\n}","import * as React from 'react'\nimport * as imageLoader from './common/imageLoader'\nimport drawImage from './common/drawImage'\nimport { NodeProps } from '../core/Node'\n\nexport type ImageViewProps = {\n  src: string\n} & NodeProps\n\nexport default class ImageView extends React.Component<ImageViewProps> {\n  state = {\n    ready: false\n  }\n  componentDidMount() {\n    if (this.props.src) {\n      imageLoader.get(this.props.src, this.onReady)\n    }\n  }\n  componentDidUpdate(prev: any) {\n    if (prev.src !== this.props.src) {\n      if (prev.src)\n        imageLoader.remove(prev.src, this.onReady)\n      if (this.props.src)\n        imageLoader.get(this.props.src, this.onReady)\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.src)\n      imageLoader.remove(this.props.src, this.onReady)\n  }\n  onReady = () => {\n    this.setState({ ready: true })\n  }\n  render() {\n    return React.createElement('Image', {\n      customDrawer: this.state.ready ? drawImage : void 0,\n      ...this.props\n    })\n  }\n}\n","\n\nexport class AnimatedValue<T> {\n  // TODO: tempor\n  private _observer?: Function\n\n  constructor(\n    private _value: T\n  ) { }\n\n  setValue(value: T) {\n    this._value = value\n    if (this._observer) {\n      this._observer(false)\n    }\n  }\n\n  getValue(observer?: Function) {\n    if (observer)\n      this._observer = observer\n    return this._value\n  }\n}\n\nexport function observeAnimatedValue<T>(observer: Function, value: T | AnimatedValue<T>, defaultValue?: T): T {\n  if (value instanceof AnimatedValue) {\n    return value.getValue(observer)\n  }\n  return value || defaultValue!\n}\n\nexport function getAnimatedValue<T>(value: T | AnimatedValue<T>, defaultValue?: T): T {\n  if (value instanceof AnimatedValue) {\n    return value.getValue()\n  }\n  return value || defaultValue!\n}","import * as React from 'react'\nimport { BaseProps, RevasTouchEvent, RevasTouch } from '../core/Node'\nimport { AnimatedValue } from '../core/Animated'\n\nexport type TouchableProps = {\n  onPress: Function\n  activeOpacity?: number\n} & BaseProps\n\nexport default class Touchable extends React.Component<TouchableProps> {\n  static defaultProps = {\n    activeOpacity: 0.7\n  }\n\n  opacity = new AnimatedValue(1)\n\n  private _start?: RevasTouch\n  private _tid = 0\n\n  private _onTouchStart = (e: RevasTouchEvent) => {\n    this._tid = +Object.keys(e.touches)[0]\n    this._start = e.touches[this._tid]\n    this.opacity.setValue(this.props.activeOpacity!)\n  }\n\n  private _onTouchEnd = (e: RevasTouchEvent) => {\n    if (this._start && e.touches[this._tid]) {\n      if (Math.abs(this._start.x - e.touches[this._tid].x) < 3\n        && Math.abs(this._start.y - e.touches[this._tid].y) < 3) {\n        this.props.onPress && this.props.onPress()\n\n      }\n    }\n    this.opacity.setValue(1)\n  }\n\n  render() {\n    return React.createElement('Touchable', {\n      onTouchStart: this._onTouchStart,\n      onTouchEnd: this._onTouchEnd,\n      ...this.props,\n      style: {\n        ...this.props.style,\n        opacity: this.opacity\n      }\n    })\n  }\n}","import { RevasTouchEvent } from '../../core/Node'\nimport { clamp } from '../../core/utils'\n\nexport interface RevasScrollEvent {\n  x: number,\n  y: number,\n  vx: number,\n  vy: number,\n  timestamp: number\n}\n\nexport default class Scroller {\n  top = 0\n\n  constructor(\n    private handler: (e: RevasScrollEvent) => any,\n    public max = -1\n  ) { }\n\n  private _lastY = -1\n  private _lastTimestamp = 0\n  private _v = 0\n  private _tid = 0\n\n  touchStart = (e: RevasTouchEvent) => {\n    if (this._lastY < 0) {\n      this._tid = +Object.keys(e.touches)[0]\n      this._lastTimestamp = e.timestamp\n      this._lastY = e.touches[this._tid].y\n    }\n  }\n\n  touchMove = (e: RevasTouchEvent) => {\n    if (this._lastY >= 0 && e.touches[this._tid]) {\n      const { y } = e.touches[this._tid]\n      const moveY = this._lastY - y\n      const duration = e.timestamp - this._lastTimestamp\n      this._v = moveY / duration\n      this._lastTimestamp = e.timestamp\n      this._lastY = y\n      this.change(moveY)\n    }\n  }\n\n  touchEnd = (e: RevasTouchEvent) => {\n    if (this._lastY >= 0) {\n      this._lastTimestamp = Date.now()\n      this._lastY = -1\n      requestAnimationFrame(this.afterEnd)\n    }\n  }\n\n  afterEnd = () => {\n    if (this._lastY < 0 && Math.abs(this._v) > 0.1) {\n      const timestamp = Date.now()\n      const duration = timestamp - this._lastTimestamp\n      this._v = friction(this._v, duration)\n      const moveY = this._v * duration\n      this._lastTimestamp = timestamp\n      this.change(moveY)\n      requestAnimationFrame(this.afterEnd)\n    }\n  }\n\n  change(top: number) {\n    const _top = clamp(this.top + top, 0, this.max > 0 ? this.max : 0)\n    // check validate\n    if (_top !== this.top) {\n      this.top = _top\n      this.handler({\n        y: this.top, vy: this._v,\n        x: 0, vx: 0,\n        timestamp: this._lastTimestamp\n      })\n    } else if (this._lastY < 0) {\n      this._v = 0\n    }\n  }\n}\n\nfunction friction(v: number, duration: number) {\n  return v - (duration * 0.005 * v)\n}","import * as React from 'react'\nimport { NodeProps, Frame } from '../core/Node'\nimport Scroller, { RevasScrollEvent } from './common/Scroller'\nimport { AnimatedValue } from '../core/Animated'\n\nexport type ScrollViewProps = {\n  onScroll?: (e: RevasScrollEvent) => any\n} & NodeProps\n\nexport default class ScrollView extends React.Component<ScrollViewProps> {\n  translateY = new AnimatedValue(0)\n\n  private _height = -1\n  private _contentHeight = -1\n\n  private _scroller = new Scroller(e => {\n    this.translateY.setValue(-e.y)\n    this.props.onScroll && this.props.onScroll(e)\n  })\n\n  private _onLayout = (frame: Frame) => {\n    if (this._height !== frame.height) {\n      this._height = frame.height\n      this._checkLayout()\n    }\n  }\n\n  private _onContentLayout = (frame: Frame) => {\n    if (this._contentHeight !== frame.height) {\n      this._contentHeight = frame.height\n      this._checkLayout()\n    }\n  }\n\n  private _checkLayout = () => {\n    const max = this._contentHeight - this._height\n    if (max > 0 && max !== this._scroller.max) {\n      this._scroller.max = max\n      this._scroller.change(0)\n    }\n  }\n\n  render() {\n    const { children, ...others } = this.props\n    return React.createElement(\n      'Scrollable',\n      {\n        ...others,\n        onTouchStart: this._scroller.touchStart,\n        onTouchMove: this._scroller.touchMove,\n        onTouchEnd: this._scroller.touchEnd,\n        onLayout: this._onLayout,\n      },\n      React.createElement('ScrollContent', {\n        onLayout: this._onContentLayout,\n        style: {\n          translateY: this.translateY\n        },\n        children\n      })\n    )\n  }\n}\n","import * as React from 'react'\nimport { NodeProps, Node } from '../core/Node'\nimport { getFrameFromNode } from '../core/utils'\n\nexport type LinearGradientProps = {\n  start?: { x: number, y: number }\n  end?: { x: number, y: number }\n  colors: string[]\n} & NodeProps\n\nexport default class LinearGradient extends React.Component<LinearGradientProps> {\n\n  render() {\n    return React.createElement('LinearGradient', {\n      ...this.props,\n      customDrawer: drawGradient\n    })\n  }\n}\n\nfunction drawGradient(ctx: CanvasRenderingContext2D, node: Node) {\n  const { colors } = node.props as LinearGradientProps\n  if (colors && colors.length > 0) {\n    const {\n      start = { x: 0, y: 0 },\n      end = { x: 1, y: 0 }\n    } = node.props as LinearGradientProps\n    const frame = getFrameFromNode(node)\n    const grad = ctx.createLinearGradient(\n      start.x * frame.width + frame.x,\n      start.y * frame.height + frame.y,\n      end.x * frame.width + frame.x,\n      end.y * frame.height + frame.y\n    )\n    for (let i = 0; i < colors.length; i++) {\n      grad.addColorStop(i / (colors.length - 1), colors[i]);\n    }\n    ctx.fillStyle = grad;\n    ctx.fill();\n  }\n\n}","import { Node, Frame } from '../Node'\nimport { getStyleFromNode } from '../utils'\n\nconst computeLayout = require('css-layout')\n\nexport interface YogaNode {\n  node: Node,\n  style: any, layout: any,\n  children: YogaNode[]\n}\n\nfunction createYoga(node: Node): any {\n  return {\n    style: getStyleFromNode(node),\n    children: node.children.map(createYoga),\n    node,\n  }\n}\n\nfunction layout(yoga: YogaNode, x = 0, y = 0) {\n  const { left, top, width, height } = yoga.layout\n  const { node, children } = yoga\n  node.frame = new Frame(x + left, y + top, width, height)\n  node.props.onLayout && node.props.onLayout(node.frame)\n  for (let i = 0; i < children.length; i++) {\n    layout(children[i], node.frame.x, node.frame.y)\n  }\n}\n\nexport function updateLayout(root: Node) {\n  const yogas = createYoga(root)\n  yogas.style = root.props\n  return () => {\n    computeLayout(yogas)\n    layout(yogas)\n  }\n}\n","import { getFrameFromNode, sortByZIndexDescending, getStyleFromNode } from \"./utils\"\nimport { Node, RevasTouchEvent, RevasTouchType, RevasTouch } from \"./Node\"\nimport { getAnimatedValue } from \"./Animated\"\n\nfunction findNodeByPoint(node: Node, x: number, y: number): Node | void {\n  if (node.props.pointerEvents === 'none') return\n  const children = node.children.slice().sort(sortByZIndexDescending)\n  const style = getStyleFromNode(node)\n\n  // tranlate, TODO: rotate & scale\n  x -= getAnimatedValue(style.translateX, 0)\n  y -= getAnimatedValue(style.translateY, 0)\n\n  for (let i = 0; i < children.length; i++) {\n    const target = findNodeByPoint(children[i], x, y)\n    if (target) return target\n  }\n  if (node.props.pointerEvents === 'box-none') return\n  const frame = getFrameFromNode(node)\n  if (frame.x < x && frame.y < y\n    && x <= frame.x + frame.width\n    && y <= frame.y + frame.height) {\n    return node\n  }\n}\n\nconst eventNodeHolder: { [key: number]: Node } = {}\n\nexport function getNodeByTouch(root: Node, type: RevasTouchType, touch: RevasTouch) {\n  if (type === 'touchstart') {\n    const target = findNodeByPoint(root, touch.x, touch.y)\n    eventNodeHolder[touch.identifier] = target || root\n    return eventNodeHolder[touch.identifier]\n  } else if (type === 'touchmove') {\n    return eventNodeHolder[touch.identifier] || root\n  } else if (type === 'touchend') {\n    const target = eventNodeHolder[touch.identifier]\n    delete eventNodeHolder[touch.identifier]\n    return target || root\n  }\n  return root\n}\n\nconst LISTENER_MAP = {\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd'\n}\n\n\nexport function emitTouch(node: Node | void, e: RevasTouchEvent) {\n  const funcName = LISTENER_MAP[e.type]\n  if (funcName) {\n    while (node) {\n      if (node.props[funcName]\n        && node.props.pointerEvents !== 'box-none'\n        && node.props[funcName](e) === false) return\n      node = node.parent\n    }\n  }\n}","import { Node, RevasTouchEvent } from './Node'\nimport { updateLayout } from './css-layout'\n// import { updateLayout } from './yoga-layout'\nimport { drawNode } from './draw'\nimport { getNodeByTouch, emitTouch } from './touch'\n\nexport class Container extends Node {\n  private _ready = true\n  private _next = false\n  private _reflow = false\n  private _ctx?: CanvasRenderingContext2D | null\n\n  constructor(ctx: CanvasRenderingContext2D | null, width: number, height: number) {\n    super('root', { width, height })\n    this._ctx = ctx\n  }\n\n  public handleTouch = (evt: RevasTouchEvent) => {\n    const emitted = new WeakSet<Node>()\n    Object.values(evt.touches).forEach(touch => {\n      const node = getNodeByTouch(this, evt.type, touch)\n      // check if node is unmounted\n      if (node.parent && !emitted.has(node)) {\n        emitted.add(node)\n        emitTouch(node, evt)\n      }\n    })\n  }\n\n  public handleResize = (width: number, height: number) => {\n    if (width !== this.props.width\n      && height !== this.props.height) {\n      this.props.width = width\n      this.props.height = height\n      this.draw(true)\n    }\n  }\n\n  public draw = (reflow: boolean) => {\n    this._reflow = this._reflow || reflow\n    if (this._ready === false) {\n      this._next = true;\n      return;\n    }\n    this._ready = false;\n    if (this._ctx) { // if not unmounted\n      if (this._reflow) {\n        updateLayout(this)()\n        this._reflow = false\n      }\n      this._ctx.clearRect(0, 0, this.props.width, this.props.height);\n      drawNode(this._ctx, this, this)\n      requestAnimationFrame(this.ready);\n    }\n  }\n\n  private ready = () => {\n    this._ready = true;\n    if (this._next) {\n      this._next = false;\n      this.draw(false);\n    }\n  }\n\n  public destory() {\n    if (this._ctx) {\n      this._ctx.clearRect(0, 0, this.props.width, this.props.height)\n      this._ctx = null\n    }\n  }\n}","import { Node } from \"./Node\";\nimport { getStyleFromNode, getFrameFromNode, sortByZIndexAscending } from \"./utils\";\nimport { observeAnimatedValue } from \"./Animated\";\nimport { Container } from \"./Container\";\n\nfunction getRadius(style: any) {\n  return {\n    tl: style.borderTopLeftRadius || style.borderRadius || 0,\n    tr: style.borderTopRightRadius || style.borderRadius || 0,\n    bl: style.borderBottomLeftRadius || style.borderRadius || 0,\n    br: style.borderBottomRightRadius || style.borderRadius || 0,\n  }\n}\n\nexport function drawNode(ctx: CanvasRenderingContext2D, node: Node, root: Container) {\n  const style = getStyleFromNode(node)\n  const frame = getFrameFromNode(node)\n\n  if (style.opacity <= 0) return\n\n  ctx.save()   // Area Range\n\n  // Animated Styles\n  const opacity = observeAnimatedValue(root.draw, style.opacity)\n  const translateX = observeAnimatedValue(root.draw, style.translateX, 0)\n  const translateY = observeAnimatedValue(root.draw, style.translateY, 0)\n\n  // Opacity:\n  if (opacity !== null && opacity < 1) {\n    ctx.globalAlpha = opacity;\n  }\n  // Translation:\n  if (translateX || translateY) {\n    ctx.translate(translateX, translateY);\n  }\n  // Rotate && Scale\n  if (style.rotate || style.scaleX || style.scaleY || style.scale) {\n    // Origin Center\n    const originX = frame.x + frame.width / 2\n    const originY = frame.y + frame.height / 2\n    ctx.translate(originX, originY);\n    if (style.rotate)\n      ctx.rotate(style.rotate);\n    if (style.scaleX || style.scaleY || style.scale)\n      ctx.scale(style.scale || style.scaleX || 0, style.scale || style.scaleY || 0);\n    ctx.translate(-originX, -originY);\n  }\n\n\n  // Draw Path\n  const radius = getRadius(style)\n  ctx.beginPath();\n  ctx.moveTo(frame.x + radius.tl, frame.y);\n  ctx.arcTo(frame.x + frame.width, frame.y, frame.x + frame.width, frame.y + frame.height, radius.tr);\n  ctx.arcTo(frame.x + frame.width, frame.y + frame.height, frame.x, frame.y + frame.height, radius.br);\n  ctx.arcTo(frame.x, frame.y + frame.height, frame.x, frame.y, radius.bl);\n  ctx.arcTo(frame.x, frame.y, frame.x + frame.width, frame.y, radius.tl);\n  ctx.closePath();\n\n  if (style.overflow === 'hidden')\n    ctx.clip()\n\n  ctx.save()   // Draw Self Start\n  // Background color & Shadow\n  const background = style.backgroundColor || 'transparent'\n  if (background !== 'transparent') {\n    // Shadow:\n    if (style.shadowColor) {\n      ctx.shadowBlur = style.shadowBlur;\n      ctx.shadowColor = style.shadowColor;\n      ctx.shadowOffsetX = style.shadowOffsetX;\n      ctx.shadowOffsetY = style.shadowOffsetY;\n    }\n    ctx.fillStyle = background;\n    ctx.fill();\n  }\n\n  // Border with border radius:\n  if (style.borderColor && style.borderWidth > 0) {\n    ctx.lineWidth = style.borderWidth;\n    ctx.strokeStyle = style.borderColor;\n    ctx.stroke();\n  }\n  ctx.restore() // Draw Self  End\n\n  if (node.props.customDrawer) {\n    ctx.save() // Draw Inner\n    node.props.customDrawer(ctx, node);\n    ctx.restore()\n  }\n\n  // Draw child layers, sorted by their z-index.\n  node.children\n    .slice()\n    .sort(sortByZIndexAscending)\n    .forEach(child => {\n      drawNode(ctx, child, root);\n    });\n\n  ctx.restore()\n}","import React from 'react';\nimport { View, RevasTouchEvent, AnimatedValue } from '../revas'\n\nexport default class Interactable extends React.Component<any, any> {\n\n  translateX = new AnimatedValue(0)\n  translateY = new AnimatedValue(0)\n\n  private _start = {\n    x: 0, y: 0\n  }\n  private _tid = 0\n\n  touchStart = (e: RevasTouchEvent) => {\n    this._tid = +Object.keys(e.touches)[0]\n    const start = e.touches[this._tid]\n    this._start.x = start.x - this.translateX.getValue()\n    this._start.y = start.y - this.translateY.getValue()\n  }\n\n  touchMove = (e: RevasTouchEvent) => {\n    if (this._start && e.touches[this._tid]) {\n      const { x, y } = e.touches[this._tid]\n      this.translateX.setValue(x - this._start.x)\n      this.translateY.setValue(y - this._start.y)\n    }\n  }\n\n  render() {\n    return <View\n      {...this.props}\n      style={{\n        ...this.props.style,\n        translateX: this.translateX,\n        translateY: this.translateY\n      }}\n      onTouchStart={this.touchStart}\n      onTouchMove={this.touchMove}\n    />\n  }\n}","import React from 'react';\nimport { Text, View, Image, Touchable, ScrollView, LinearGradient } from '../revas';\nimport Interactable from './Interactable';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Interactable style={styles.card}>\n        <Text style={styles.title}>Drag and Move! </Text>\n        <Image style={styles.logo}\n          src={require('./logo.png')} />\n        <Text style={styles.text} numberOfLines={2}>\n          Revas让你可以用React和CSS，在Canvas上绘制高性能交互界面，基于\bReact v16和Yoga Layout～{'🎉'}\n        </Text>\n        <LinearGradient style={styles.decorator} colors={['#9254DE', '#B37FEB', '#91D5FF', '#40A9FF']} />\n        <Touchable style={styles.btn} onPress={() => alert('Enjoy!~🎉')}>\n          <Text style={styles.btnText}>Go</Text>\n        </Touchable>\n      </Interactable>\n      <ScrollView style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}>\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#abcdef',\n  },\n  card: {\n    padding: 20,\n    margin: 10,\n    borderRadius: 10,\n    shadowBlur: 20,\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffsetX: 0,\n    shadowOffsetY: 5,\n    backgroundColor: '#fff',\n    // alignItems: 'center',\n    zIndex: 1,\n    translateX: 50\n  },\n  decorator: {\n    height: 4, borderRadius: 2,\n    margin: 10, marginLeft: 40, marginRight: 40\n  },\n  title: {\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    textAlign: 'center',\n    // width: 280,\n    padding: 10,\n    paddingBottom: 0,\n    color: '#333'\n  },\n  logo: {\n    // width: 200,\n    height: 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    resizeMode: 'contain'\n  },\n  btn: {\n    justifyContent: 'center',\n    height: 40, backgroundColor: 'blue',\n    // width: 150\n  },\n  btnText: {\n    fontSize: 20,\n    textAlign: 'center',\n    height: 30,\n    lineHeight: 30,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL as string,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import renderer from '../core/reconciler'\nimport { noop } from '../core/utils'\nimport { Container } from '../core/Container'\nimport { RevasTouch, RevasTouchEvent } from '../core/Node'\n\nfunction createRevasTouchEvent(e: TouchEvent): RevasTouchEvent {\n  const touches: { [key: number]: RevasTouch } = {}\n  const type: any = e.type === 'touchcancel' ? 'touchend' : e.type\n  Object.values(e.changedTouches).forEach(touch => {\n    const { offsetLeft, offsetTop } = touch.target as HTMLCanvasElement\n    touches[touch.identifier] = {\n      identifier: touch.identifier,\n      x: touch.clientX - offsetLeft,\n      y: touch.clientY - offsetTop\n    }\n  })\n  return { type, touches, timestamp: e.timeStamp || Date.now() }\n}\n\nexport function render(app: React.ReactNode, canvas: HTMLCanvasElement) {\n  const container = new Container(canvas.getContext('2d'), canvas.clientWidth, canvas.clientHeight)\n  canvas.ontouchstart = canvas.ontouchmove = canvas.ontouchend =\n    canvas.ontouchcancel = e => container.handleTouch(createRevasTouchEvent(e))\n  canvas.onresize = e => container.handleResize(canvas.clientWidth, canvas.clientHeight)\n  const fiber = renderer.createContainer(container, false, false)\n  renderer.updateContainer(app, fiber, null, noop)\n  return {\n    unmount() {\n      renderer.updateContainer(null, fiber, null, noop)\n      canvas.ontouchstart = canvas.ontouchmove = canvas.ontouchend = null\n      container.destory()\n    }\n  }\n}\n","import React from 'react';\nimport { render } from './revas'\nimport App from './develop/App';\nimport * as serviceWorker from './develop/serviceWorker';\nimport createCanvas from './develop/createCanvas'\n\nimport './develop/index.css';\n\n// eslint-disable-next-line\nconst app = render(\n  React.createElement(App),\n  createCanvas()\n)\n\n// try unmount\n// setTimeout(() => {\n//   app.unmount()\n// }, 5000);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default function () {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')!\n  function onresize(e?: any) {\n    if (window.innerHeight > 0 && window.innerHeight > 0\n      && (window.innerHeight !== canvas.clientHeight\n        || window.innerWidth !== canvas.clientWidth)) {\n      const scale = window.devicePixelRatio\n      canvas.width = window.innerWidth * scale\n      canvas.height = window.innerHeight * scale\n      canvas.style.width = window.innerWidth + 'px'\n      canvas.style.height = window.innerHeight + 'px'\n      ctx.resetTransform()\n      ctx.scale(scale, scale)\n      e && canvas.onresize && canvas.onresize(e)\n    }\n  }\n  onresize()\n  canvas.className = 'canvas'\n  document.body.appendChild(canvas)\n  window.onorientationchange = window.onresize = () => requestAnimationFrame(onresize)// (e: any) => setTimeout(() => onresize(e), 500);\n  return canvas\n}\n"],"sourceRoot":""}