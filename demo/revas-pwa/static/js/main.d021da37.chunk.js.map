{"version":3,"sources":["develop/logo.png","revas/components/View.ts","revas/core/utils.ts","revas/components/common/drawText.ts","revas/components/Text.ts","revas/core/Node.ts","revas/core/reconciler.ts","revas/components/common/imageLoader.ts","revas/components/common/drawImage.ts","revas/components/Image.ts","revas/components/Touchable.ts","revas/components/common/Scroller.ts","revas/components/ScrollView.ts","revas/components/LinearGradient.ts","revas/core/css-layout/index.ts","revas/core/touch.ts","revas/core/Container.ts","revas/core/draw.ts","develop/App.tsx","develop/serviceWorker.ts","revas/web/render.ts","index.tsx","develop/createCanvas.ts"],"names":["module","exports","View","props","React","noop","EMPTY_OBJECT","Object","freeze","EMPTY_ARRAY","checkAndRemove","parent","child","index","children","indexOf","splice","appendChild","push","removeChild","insertBefore","before","beforeIndex","getStyleFromNode","node","style","getFrameFromNode","frame","sortByZIndexAscending","a","b","styleA","styleB","zIndex","sortByZIndexDescending","clamp","n","min","max","Math","ASTRAL_RANGE","WORD_RANGE","adapter","createImage","Image","createOffscreenCanvas","requestAnimationFrame","cb","splitContent","content","wordBreak","match","str","getWords","applyTextStyle","ctx","options","textStyle","fontStyle","fontWeight","fontSize","fontFamily","textBaseline","color","font","fillStyle","measureText","lines","chars","width","numberOfLines","_width","_text","pushLine","charWidth","char","force","text","i","length","pop","lastLine","slice","measureLines","lineHeight","drawText","textShadowColor","shadowBlur","textShadowBlur","shadowColor","shadowOffsetX","textShadowOffsetX","shadowOffsetY","textShadowOffsetY","line","x","textAlign","fillText","y","Text","state","height","_measured","_drawed","getTextFromNode","getTextStyleFromNode","textPropsChanged","setState","this","others","customDrawer","TEXT_STYLES_LIST","DEFAULT_TEXTSTYLE","left","right","item","textStyleChanged","Array","isArray","join","Frame","Node","type","ReactReconciler","supportsHydration","supportsPersistence","supportsMutation","isPrimaryRenderer","createInstance","container","createTextInstance","Error","appendInitialChild","appendChildToContainer","removeChildFromContainer","insertInContainerBefore","finalizeInitialChildren","getPublicInstance","instance","prepareUpdate","commitUpdate","updatePayload","oldProps","newProps","prepareForCommit","resetAfterCommit","draw","resetTextContent","getRootHostContext","getChildHostContext","parentHostContext","shouldSetTextContent","shouldDeprioritizeSubtree","scheduleDeferredCallback","cancelDeferredCallback","setTimeout","clearTimeout","noTimeout","now","Date","CachedImage","src","image","targets","_ready","onload","renderer","batchedUpdates","forEach","target","onerror","cache","Map","get","has","set","cached","add","remove","empty","delete","drawImage","imageLoader","actualSize","focusPoint","resizeMode","scale","scaledSize","sw","round","sh","dw","dh","dx","dy","sx","sy","ImageView","ready","onReady","prev","Touchable","touching","_start","_tid","_onTouchStart","e","keys","touches","_onTouchEnd","abs","onPress","onTouchStart","onTouchEnd","opacity","activeOpacity","defaultProps","Scroller","handler","top","_lastY","_lastTimestamp","_v","touchStart","timestamp","touchMove","moveY","duration","change","touchEnd","afterEnd","friction","_top","vy","vx","v","ScrollView","_height","_contentHeight","_scroller","onScroll","_onLayout","_checkLayout","_onContentLayout","onTouchMove","onLayout","translateY","LinearGradient","drawGradient","colors","start","end","grad","createLinearGradient","addColorStop","fill","computeLayout","require","createYoga","map","updateLayout","root","yogas","layout","yoga","eventNodeHolder","getNodeByTouch","touch","findNodeByPoint","pointerEvents","sort","identifier","LISTENER_MAP","touchstart","touchmove","touchend","Container","_next","_ctx","handleTouch","evt","emitted","WeakSet","values","funcName","emitTouch","handleResize","clearRect","drawNode","save","globalAlpha","translateX","translate","rotate","scaleX","scaleY","originX","originY","radius","tl","borderTopLeftRadius","borderRadius","tr","borderTopRightRadius","bl","borderBottomLeftRadius","br","borderBottomRightRadius","getRadius","beginPath","moveTo","arcTo","closePath","overflow","clip","background","backgroundColor","borderColor","borderWidth","lineWidth","strokeStyle","stroke","restore","styles","flex","justifyContent","card","padding","margin","decorator","marginLeft","marginRight","paddingBottom","logo","btn","btnText","Boolean","window","location","hostname","app","canvas","getContext","clientWidth","clientHeight","ontouchstart","ontouchmove","ontouchend","ontouchcancel","changedTouches","offsetLeft","offsetTop","clientX","clientY","timeStamp","createRevasTouchEvent","onresize","fiber","createContainer","updateContainer","render","createElement","alert","position","bottom","document","innerHeight","innerWidth","devicePixelRatio","resetTransform","className","body","onorientationchange","createCanvas","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.d021da37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.48529616.png\";","import * as React from 'react'\nimport { NodeProps } from '../core/Node'\n\nexport default function View(props: NodeProps) {\n  return React.createElement('View', props)\n}","import { Node } from './Node'\n\nexport function noop(): any { }\nexport const EMPTY_OBJECT = Object.freeze({})\nexport const EMPTY_ARRAY = Object.freeze([])\n\nfunction checkAndRemove(parent: Node, child: Node) {\n  const index = parent.children.indexOf(child);\n  if (index >= 0) {\n    parent.children.splice(index, 1);\n  }\n}\n\nexport function appendChild(parent: Node, child: Node) {\n  checkAndRemove(parent, child)\n  parent.children.push(child);\n  child.parent = parent\n}\n\nexport function removeChild(parent: Node, child: Node) {\n  checkAndRemove(parent, child)\n  child.parent = void 0\n}\n\nexport function insertBefore(parent: Node, child: Node, before: Node) {\n  checkAndRemove(parent, child)\n  const beforeIndex = parent.children.indexOf(before);\n  parent.children.splice(beforeIndex, 0, child);\n  child.parent = parent\n}\n\nexport function getStyleFromNode(node: Node) {\n  const { props: { style = EMPTY_OBJECT } } = node\n  return style\n}\n\nexport function getFrameFromNode(node: Node) {\n  const { frame } = node\n  return frame\n}\n\nexport function sortByZIndexAscending(a: Node, b: Node) {\n  const styleA = getStyleFromNode(a)\n  const styleB = getStyleFromNode(b)\n  return (styleA.zIndex || 0) - (styleB.zIndex || 0);\n}\n\nexport function sortByZIndexDescending(a: Node, b: Node) {\n  return -sortByZIndexAscending(a, b)\n}\n\n\nexport function clamp(n: number, min: number, max: number) {\n  return Math.min(Math.max(n, min), max);\n};\n\nconst ASTRAL_RANGE = /\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g\nconst WORD_RANGE = /\\w+|\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nexport function getChars(str: string): readonly string[] {\n  return str.match(ASTRAL_RANGE) || EMPTY_ARRAY\n}\n\nexport function getWords(str: string): readonly string[] {\n  return str.match(WORD_RANGE) || EMPTY_ARRAY\n}\n\nexport type RevasAdapter = {\n  createImage: () => HTMLImageElement\n  createOffscreenCanvas: () => HTMLCanvasElement\n  requestAnimationFrame: (cb: any) => any\n}\n\nexport const adapter: RevasAdapter = {\n  createImage: () => new Image(),\n  createOffscreenCanvas: noop,\n  requestAnimationFrame: (cb: any) => requestAnimationFrame(cb)\n}","import { Frame } from \"../../core/Node\"\nimport { getChars, getWords } from \"../../core/utils\"\n\nexport interface DrawTextOptions {\n  textStyle: any,\n  numberOfLines: number,\n  frame: Frame,\n  content: string\n}\n\nfunction measureLines(\n  ctx: CanvasRenderingContext2D,\n  chars: readonly string[],\n  width: number,\n  numberOfLines: number = 0\n) {\n  const lines: { width: number, text: string }[] = []\n  let _width = 0\n  let _text = ''\n\n  function pushLine(charWidth = 0, char = '', force = false) {\n    (force || _text) && lines.push({ width: _width, text: _text })\n    _width = charWidth\n    _text = char\n  }\n  for (let i = 0; i < chars.length; i++) {\n    if (numberOfLines > 0 && lines.length > numberOfLines) {\n      lines.pop()\n      const lastLine = lines[lines.length - 1]\n      lastLine.text = lastLine.text + '...'\n      lastLine.width = ctx.measureText(lastLine.text).width\n      return lines\n    }\n    const char = chars[i]\n    if (char === '\\n') {\n      pushLine(0, '', true)\n    } else {\n      const charWidth = ctx.measureText(char).width\n      if (charWidth + _width > width) {\n        pushLine(charWidth, char)\n      } else {\n        _width += charWidth\n        _text += char\n      }\n    }\n  }\n  pushLine()\n  if (numberOfLines > 0 && lines.length > numberOfLines) {\n    lines.pop()\n    const lastLine = lines[lines.length - 1]\n    lastLine.text = lastLine.text.slice(0, -3) + '...'\n    lastLine.width = ctx.measureText(lastLine.text).width\n    return lines\n  }\n  return lines\n}\n\nfunction splitContent(content: string, wordBreak: string) {\n  switch (wordBreak) {\n    case 'break-all':\n      return getChars(content)\n    case 'keep-all':\n      return [content]\n    default:\n      return getWords(content)\n  }\n}\n\nexport function applyTextStyle(ctx: CanvasRenderingContext2D, options: DrawTextOptions) {\n  const { fontStyle, fontWeight, fontSize, fontFamily, textBaseline, color } = options.textStyle\n  // Apply Styles\n  ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`\n  ctx.fillStyle = color\n  ctx.textBaseline = textBaseline\n}\n\nexport function measureText(ctx: CanvasRenderingContext2D, options: DrawTextOptions): [any[], number] {\n\n  const lines = measureLines(\n    ctx,\n    splitContent(options.content, options.textStyle.wordBreak),\n    options.frame.width,\n    options.numberOfLines\n  )\n  return [lines, options.textStyle.lineHeight * lines.length]\n}\n\n\nexport function drawText(ctx: CanvasRenderingContext2D, options: DrawTextOptions, lines: any[]) {\n  const { textStyle: style, frame } = options\n\n  // Shadow:\n  if (style.textShadowColor) {\n    ctx.shadowBlur = style.textShadowBlur;\n    ctx.shadowColor = style.textShadowColor;\n    ctx.shadowOffsetX = style.textShadowOffsetX;\n    ctx.shadowOffsetY = style.textShadowOffsetY;\n  }\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i]\n    let x = frame.x\n    switch (style.textAlign) {\n      case 'center':\n        x = x + (frame.width / 2) - (line.width / 2);\n        break;\n      case 'right':\n        x = x + frame.width - line.width;\n        break;\n    }\n    ctx.fillText(line.text, x, style.lineHeight * (i + 0.5) + frame.y);\n  }\n}\n","import * as React from 'react'\nimport { drawText, measureText, applyTextStyle, DrawTextOptions } from './common/drawText'\nimport { NodeProps, Node } from '../core/Node'\nimport { getFrameFromNode } from '../core/utils'\n\nexport type TextProps = {\n  numberOfLines?: number\n} & NodeProps\n\nexport default class Text extends React.Component<TextProps> {\n  state = { height: 0 }\n\n  _measured: [any[], number] = [[], 0]\n\n  _drawed?: DrawTextOptions\n\n  drawText = (ctx: CanvasRenderingContext2D, node: Node) => {\n    const content = getTextFromNode(node)\n    if (content) {\n      const options = {\n        numberOfLines: node.props.numberOfLines || 0,\n        textStyle: getTextStyleFromNode(node),\n        frame: getFrameFromNode(node),\n        content,\n      }\n      applyTextStyle(ctx, options)\n      if (textPropsChanged(options, this._drawed)) {\n        this._measured = measureText(ctx, options)\n        this._drawed = options\n      }\n      const [lines, height] = this._measured\n      if (height !== this.state.height) {\n        this.setState({ height })\n      } else {\n        drawText(ctx, options, lines)\n      }\n    }\n  }\n  render() {\n    const { children, numberOfLines, ...others } = this.props as any\n    return React.createElement('View', others,\n      React.createElement('Text', {\n        content: children,\n        customDrawer: this.drawText,\n        textStyle: others.style,\n        style: this.state,\n        numberOfLines\n      })\n    )\n  }\n}\n\nconst TEXT_STYLES_LIST = [\n  'fontStyle',\n  'fontWeight',\n  'fontSize',\n  'fontFamily',\n  'textBaseline',\n  'wordBreak',\n  'lineHeight'\n]\n\nconst DEFAULT_TEXTSTYLE = {\n  fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\",\n  fontWeight: 'normal',\n  fontSize: 14,\n  color: '#000',\n  fontStyle: 'normal',\n  textBaseline: 'middle',\n}\n\nfunction textStyleChanged(left: any, right: any) {\n  for (let i = 0; i < TEXT_STYLES_LIST.length; i++) {\n    const item = TEXT_STYLES_LIST[i]\n    if (left[item] !== right[item]) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction textPropsChanged(left: DrawTextOptions, right?: DrawTextOptions) {\n  if (!right) return true\n  if (left.content !== right.content)\n    return true\n  if (left.numberOfLines !== right.numberOfLines)\n    return true\n  if (left.frame.width !== right.frame.width)\n    return true\n  return textStyleChanged(left.textStyle, right.textStyle)\n}\n\nfunction getTextFromNode(node: Node) {\n  const frame = getFrameFromNode(node)\n  if (frame.width > 0) {\n    const { content } = node.props\n    if (typeof content === 'string') {\n      return content\n    } else if (Array.isArray(content)) {\n      return content.join('')\n    }\n  }\n  return ''\n}\n\nfunction getTextStyleFromNode(node: Node) {\n  const style = { ...DEFAULT_TEXTSTYLE, ...node.props.textStyle }\n  style.lineHeight = style.lineHeight || (style.fontSize * 1.1)\n  return style\n}\n// TODO: nested text support","import { ReactNode } from 'react'\n\n\nexport class Frame {\n  constructor(\n    public x = 0,\n    public y = 0,\n    public width = 0,\n    public height = 0\n  ) { }\n}\n\nexport class Node {\n  public readonly children: Node[] = []\n  public frame = new Frame()\n  public parent?: Node\n  constructor(\n    public readonly type: string,\n    public props: NodeProps & any,\n  ) { }\n}\n\nexport interface RevasTouch {\n  identifier: number,\n  x: number,\n  y: number,\n}\n\nexport type RevasTouchType = 'touchstart' | 'touchmove' | 'touchend'\n\nexport interface RevasTouchEvent {\n  type: RevasTouchType\n  touches: { [key: number]: RevasTouch }\n  timestamp: number\n}\n\nexport type RevasTouchEventListener = (event: RevasTouchEvent) => any\n\nexport interface BaseProps {\n  children?: ReactNode,\n  style?: any,\n}\n\nexport interface NodeProps extends BaseProps {\n  onTouchStart?: RevasTouchEventListener\n  onTouchMove?: RevasTouchEventListener\n  onTouchEnd?: RevasTouchEventListener\n  onLayout?: (frame: Frame) => any\n  pointerEvents?: 'auto' | 'none' | 'box-none'\n}","import ReactReconciler from 'react-reconciler';\nimport { Node } from './Node'\nimport { appendChild, noop, removeChild, insertBefore } from './utils'\nimport { Container } from './Container';\n\nexport default ReactReconciler({\n  supportsHydration: false,\n  supportsPersistence: false,\n  supportsMutation: true,\n  isPrimaryRenderer: true,\n\n  createInstance(type: string, props: any, container: Container) {\n    return new Node(type, props);\n  },\n\n  createTextInstance() {\n    throw new Error('Revas: string cannot be child out of <Text/>')\n  },\n\n  appendInitialChild: appendChild,\n  appendChild: appendChild,\n  appendChildToContainer: appendChild,\n  removeChild: removeChild,\n  removeChildFromContainer: removeChild,\n  insertBefore: insertBefore,\n  insertInContainerBefore: insertBefore,\n\n  finalizeInitialChildren() {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareUpdate() {\n    return true;\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.props = newProps\n  },\n\n  prepareForCommit: noop,\n\n  resetAfterCommit(container: Container) {\n    container.draw()\n  },\n\n  resetTextContent: noop,\n\n  getRootHostContext() {\n    return {}\n  },\n\n  getChildHostContext(parentHostContext: object) {\n    return parentHostContext;\n  },\n\n  shouldSetTextContent() {\n    return false\n  },\n\n  shouldDeprioritizeSubtree: () => false,\n\n  scheduleDeferredCallback: noop,\n  cancelDeferredCallback: noop,\n  setTimeout: setTimeout,\n  clearTimeout: clearTimeout,\n  noTimeout: -1,\n  now: Date.now,\n})\n","import { adapter } from '../../core/utils'\nimport renderer from '../../core/reconciler'\n\nclass CachedImage {\n  readonly image = adapter.createImage()\n  private readonly targets: Function[] = []\n  private _ready = false\n  get empty() {\n    return this.targets.length === 0\n  }\n  constructor(\n    public readonly src: string\n  ) {\n    if (!this.image) {\n      throw new Error('Revas: createImage must be initialized')\n    }\n    this.image.onload = this.onload\n    this.image.onerror = this.onerror\n    this.image.src = src\n  }\n  onload = () => {\n    this._ready = true\n    renderer.batchedUpdates(() => {\n      this.targets.forEach(target => target(this.image))\n    })\n  }\n  onerror = () => { }\n  add(target: Function) {\n    if (this.targets.indexOf(target) < 0) {\n      this.targets.push(target)\n      if (this._ready) {\n        target(this.image)\n      }\n    }\n  }\n  remove(target: Function) {\n    const index = this.targets.indexOf(target)\n    this.targets.splice(index, 1)\n  }\n}\n\nconst cache = new Map<string, CachedImage>()\n\n\nexport function get(src: string, target?: Function) {\n  if (!cache.has(src)) {\n    cache.set(src, new CachedImage(src))\n  }\n  const cached = cache.get(src)!\n  target && cached.add(target)\n  return cached.image\n}\n\nexport function remove(src: string, target: Function) {\n  if (cache.has(src)) {\n    const cached = cache.get(src)!\n    cached.remove(target)\n    if (cached.empty) {\n      cache.delete(src)\n    }\n  }\n}","import { Node } from '../../core/Node'\nimport * as imageLoader from './imageLoader'\nimport { clamp, getStyleFromNode, getFrameFromNode } from '../../core/utils'\n\nexport default function drawImage(ctx: CanvasRenderingContext2D, node: Node) {\n  const image = imageLoader.get(node.props.src)\n  if (image.height <= 0) return\n  const frame = getFrameFromNode(node)\n  const { width, height, x, y } = frame\n  if (width <= 0 || height <= 0) return\n  const style = getStyleFromNode(node)\n\n\n  const actualSize = {\n    width: image.width,\n    height: image.height\n  };\n\n  const focusPoint = style.focusPoint || {\n    x: actualSize.width * 0.5,\n    y: actualSize.height * 0.5\n  };\n\n  if (style.resizeMode === 'contain') {\n\n    const scale = Math.min(\n      width / actualSize.width,\n      height / actualSize.height\n    ) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sw = Math.round(actualSize.width);\n    const sh = Math.round(actualSize.height);\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(scaledSize.width);\n    const dh = Math.round(scaledSize.height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round((width - scaledSize.width) / 2 + x);\n    const dy = Math.round((height - scaledSize.height) / 2 + y);\n\n    ctx.drawImage(image, 0, 0, sw, sh, dx, dy, dw, dh);\n  } else {\n\n    const scale = Math.max(\n      width / actualSize.width,\n      height / actualSize.height\n    ) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sx = Math.round(clamp(width * 0.5 - focusPoint.x * scale, width - scaledSize.width, 0)) * (-1 / scale);\n    const sy = Math.round(clamp(height * 0.5 - focusPoint.y * scale, height - scaledSize.height, 0)) * (-1 / scale);\n    const sw = Math.round(actualSize.width - (sx * 2));\n    const sh = Math.round(actualSize.height - (sy * 2));\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(width);\n    const dh = Math.round(height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round(x);\n    const dy = Math.round(y);\n\n    ctx.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n\n  }\n}","import * as React from 'react'\nimport * as imageLoader from './common/imageLoader'\nimport drawImage from './common/drawImage'\nimport { NodeProps } from '../core/Node'\n\nexport type ImageViewProps = {\n  src: string\n} & NodeProps\n\nexport default class ImageView extends React.Component<ImageViewProps> {\n  state = {\n    ready: false\n  }\n  componentDidMount() {\n    if (this.props.src) {\n      imageLoader.get(this.props.src, this.onReady)\n    }\n  }\n  componentDidUpdate(prev: any) {\n    if (prev.src !== this.props.src) {\n      if (prev.src)\n        imageLoader.remove(prev.src, this.onReady)\n      if (this.props.src)\n        imageLoader.get(this.props.src, this.onReady)\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.src)\n      imageLoader.remove(this.props.src, this.onReady)\n  }\n  onReady = () => {\n    this.setState({ ready: true })\n  }\n  render() {\n    return React.createElement('Image', {\n      customDrawer: this.state.ready ? drawImage : void 0,\n      ...this.props\n    })\n  }\n}\n","import * as React from 'react'\nimport { BaseProps, RevasTouchEvent, RevasTouch } from '../core/Node'\n\nexport type TouchableProps = {\n  onPress: Function\n  activeOpacity?: number\n} & BaseProps\n\nexport default class Touchable extends React.Component<TouchableProps> {\n  static defaultProps = {\n    activeOpacity: 0.7\n  }\n\n  state = {\n    touching: false\n  }\n\n  private _start?: RevasTouch\n  private _tid = 0\n\n  private _onTouchStart = (e: RevasTouchEvent) => {\n    this._tid = +Object.keys(e.touches)[0]\n    this._start = e.touches[this._tid]\n    this.setState({ touching: true })\n  }\n\n  private _onTouchEnd = (e: RevasTouchEvent) => {\n    if (this._start && e.touches[this._tid]) {\n      if (Math.abs(this._start.x - e.touches[this._tid].x) < 3\n        && Math.abs(this._start.y - e.touches[this._tid].y) < 3) {\n        this.props.onPress && this.props.onPress()\n\n      }\n    }\n    this.setState({ touching: false })\n  }\n\n  render() {\n    return React.createElement('Touchable', {\n      onTouchStart: this._onTouchStart,\n      onTouchEnd: this._onTouchEnd,\n      ...this.props,\n      style: {\n        ...this.props.style,\n        opacity: this.state.touching ? this.props.activeOpacity : 1\n      }\n    })\n  }\n}","import { RevasTouchEvent } from '../../core/Node'\nimport { clamp, adapter } from '../../core/utils'\n\nexport interface RevasScrollEvent {\n  x: number,\n  y: number,\n  vx: number,\n  vy: number,\n  timestamp: number\n}\n\nexport default class Scroller {\n  top = 0\n\n  constructor(\n    private handler: (e: RevasScrollEvent) => any,\n    public max = -1\n  ) { }\n\n  private _lastY = -1\n  private _lastTimestamp = 0\n  private _v = 0\n  private _tid = 0\n\n  touchStart = (e: RevasTouchEvent) => {\n    if (this._lastY < 0) {\n      this._tid = +Object.keys(e.touches)[0]\n      this._lastTimestamp = e.timestamp\n      this._lastY = e.touches[this._tid].y\n    }\n  }\n\n  touchMove = (e: RevasTouchEvent) => {\n    if (this._lastY >= 0 && e.touches[this._tid]) {\n      const { y } = e.touches[this._tid]\n      const moveY = this._lastY - y\n      const duration = e.timestamp - this._lastTimestamp\n      this._v = moveY / duration\n      this._lastTimestamp = e.timestamp\n      this._lastY = y\n      this.change(moveY)\n    }\n  }\n\n  touchEnd = (e: RevasTouchEvent) => {\n    if (this._lastY >= 0) {\n      this._lastTimestamp = Date.now()\n      this._lastY = -1\n      adapter.requestAnimationFrame(this.afterEnd)\n    }\n  }\n\n  afterEnd = () => {\n    if (this._lastY < 0 && Math.abs(this._v) > 0.1) {\n      const timestamp = Date.now()\n      const duration = timestamp - this._lastTimestamp\n      this._v = friction(this._v, duration)\n      const moveY = this._v * duration\n      this._lastTimestamp = timestamp\n      this.change(moveY)\n      adapter.requestAnimationFrame(this.afterEnd)\n    }\n  }\n\n  change(top: number) {\n    const _top = clamp(this.top + top, 0, this.max > 0 ? this.max : 0)\n    // check validate\n    if (_top !== this.top) {\n      this.top = _top\n      this.handler({\n        y: this.top, vy: this._v,\n        x: 0, vx: 0,\n        timestamp: this._lastTimestamp\n      })\n    } else if (this._lastY < 0) {\n      this._v = 0\n    }\n  }\n}\n\nfunction friction(v: number, duration: number) {\n  return v - (duration * 0.005 * v)\n}","import * as React from 'react'\nimport { NodeProps, Frame } from '../core/Node'\nimport Scroller, { RevasScrollEvent } from './common/Scroller'\n\nexport type ScrollViewProps = {\n  onScroll?: (e: RevasScrollEvent) => any\n} & NodeProps\n\nexport default class ScrollView extends React.Component<ScrollViewProps> {\n  state = {\n    top: 0\n  }\n\n  private _height = -1\n  private _contentHeight = -1\n\n  private _scroller = new Scroller(e => {\n    this.setState({ top: e.y })\n    this.props.onScroll && this.props.onScroll(e)\n  })\n\n  private _onLayout = (frame: Frame) => {\n    if (this._height !== frame.height) {\n      this._height = frame.height\n      this._checkLayout()\n    }\n  }\n\n  private _onContentLayout = (frame: Frame) => {\n    if (this._contentHeight !== frame.height) {\n      this._contentHeight = frame.height\n      this._checkLayout()\n    }\n  }\n\n  private _checkLayout = () => {\n    const max = this._contentHeight - this._height\n    if (max > 0 && max !== this._scroller.max) {\n      this._scroller.max = max\n      this._scroller.change(0)\n    }\n  }\n\n  render() {\n    const { children, ...others } = this.props\n    return React.createElement(\n      'Scrollable',\n      {\n        ...others,\n        onTouchStart: this._scroller.touchStart,\n        onTouchMove: this._scroller.touchMove,\n        onTouchEnd: this._scroller.touchEnd,\n        onLayout: this._onLayout,\n      },\n      React.createElement('ScrollContent', {\n        onLayout: this._onContentLayout,\n        style: {\n          translateY: -this.state.top\n        },\n        children\n      })\n    )\n  }\n}\n","import * as React from 'react'\nimport { NodeProps, Node } from '../core/Node'\nimport { getFrameFromNode } from '../core/utils'\n\nexport type LinearGradientProps = {\n  start?: { x: number, y: number }\n  end?: { x: number, y: number }\n  colors: string[]\n} & NodeProps\n\nexport default class LinearGradient extends React.Component<LinearGradientProps> {\n\n  render() {\n    return React.createElement('LinearGradient', {\n      ...this.props,\n      customDrawer: drawGradient\n    })\n  }\n}\n\nfunction drawGradient(ctx: CanvasRenderingContext2D, node: Node) {\n  const { colors } = node.props as LinearGradientProps\n  if (colors && colors.length > 0) {\n    const {\n      start = { x: 0, y: 0 },\n      end = { x: 1, y: 0 }\n    } = node.props as LinearGradientProps\n    const frame = getFrameFromNode(node)\n    const grad = ctx.createLinearGradient(\n      start.x * frame.width + frame.x,\n      start.y * frame.height + frame.y,\n      end.x * frame.width + frame.x,\n      end.y * frame.height + frame.y\n    )\n    for (let i = 0; i < colors.length; i++) {\n      grad.addColorStop(i / (colors.length - 1), colors[i]);\n    }\n    ctx.fillStyle = grad;\n    ctx.fill();\n  }\n\n}","import { Node, Frame } from '../Node'\nimport { getStyleFromNode } from '../utils'\n\nconst computeLayout = require('css-layout')\n\nexport interface YogaNode {\n  node: Node,\n  style: any, layout: any,\n  children: YogaNode[]\n}\n\nfunction createYoga(node: Node): any {\n  return {\n    style: getStyleFromNode(node),\n    children: node.children.map(createYoga),\n    node,\n  }\n}\n\nfunction layout(yoga: YogaNode, x = 0, y = 0) {\n  const { left, top, width, height } = yoga.layout\n  const { node, children } = yoga\n  node.frame = new Frame(x + left, y + top, width, height)\n  node.props.onLayout && node.props.onLayout(node.frame)\n  for (let i = 0; i < children.length; i++) {\n    layout(children[i], node.frame.x, node.frame.y)\n  }\n}\n\nexport function updateLayout(root: Node) {\n  const yogas = createYoga(root)\n  yogas.style = root.props\n  return () => {\n    computeLayout(yogas)\n    layout(yogas)\n  }\n}\n","import { getFrameFromNode, sortByZIndexDescending } from \"./utils\"\nimport { Node, RevasTouchEvent, RevasTouchType, RevasTouch } from \"./Node\"\n\nfunction findNodeByPoint(node: Node, x: number, y: number): Node | void {\n  if (node.props.pointerEvents === 'none') return\n  const children = node.children.slice().sort(sortByZIndexDescending)\n  for (let i = 0; i < children.length; i++) {\n    const target = findNodeByPoint(children[i], x, y)\n    if (target) return target\n  }\n  if (node.props.pointerEvents === 'box-none') return\n  const frame = getFrameFromNode(node)\n  if (frame.x < x && frame.y < y\n    && x <= frame.x + frame.width\n    && y <= frame.y + frame.height) {\n    return node\n  }\n}\n\nconst eventNodeHolder: { [key: number]: Node } = {}\n\nexport function getNodeByTouch(root: Node, type: RevasTouchType, touch: RevasTouch) {\n  if (type === 'touchstart') {\n    const target = findNodeByPoint(root, touch.x, touch.y)\n    eventNodeHolder[touch.identifier] = target || root\n    return eventNodeHolder[touch.identifier]\n  } else if (type === 'touchmove') {\n    return eventNodeHolder[touch.identifier] || root\n  } else if (type === 'touchend') {\n    const target = eventNodeHolder[touch.identifier]\n    delete eventNodeHolder[touch.identifier]\n    return target || root\n  }\n  return root\n}\n\nconst LISTENER_MAP = {\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd'\n}\n\n\nexport function emitTouch(node: Node | void, e: RevasTouchEvent) {\n  const funcName = LISTENER_MAP[e.type]\n  if (funcName) {\n    while (node) {\n      if (node.props[funcName]\n        && node.props.pointerEvents !== 'box-none'\n        && node.props[funcName](e) === false) return\n      node = node.parent\n    }\n  }\n}","import { Node, RevasTouchEvent } from './Node'\nimport { updateLayout } from './css-layout'\n// import { updateLayout } from './yoga-layout'\nimport { drawNode } from './draw'\nimport { getNodeByTouch, emitTouch } from './touch'\nimport { adapter } from './utils'\n\nexport class Container extends Node {\n  private _ready = true\n  private _next = false\n  private _ctx?: CanvasRenderingContext2D | null\n\n  constructor(ctx: CanvasRenderingContext2D | null, width: number, height: number) {\n    super('root', { width, height })\n    this._ctx = ctx\n  }\n\n  public handleTouch = (evt: RevasTouchEvent) => {\n    const emitted = new WeakSet<Node>()\n    Object.values(evt.touches).forEach(touch => {\n      const node = getNodeByTouch(this, evt.type, touch)\n      // check if node is unmounted\n      if (node.parent && !emitted.has(node)) {\n        emitted.add(node)\n        emitTouch(node, evt)\n      }\n    })\n  }\n\n  public handleResize = (width: number, height: number) => {\n    if (width !== this.props.width\n      && height !== this.props.height) {\n      this.props.width = width\n      this.props.height = height\n      this.draw()\n    }\n  }\n\n  public draw = () => {\n    if (this._ready === false) {\n      this._next = true;\n      return;\n    }\n    this._ready = false;\n    if (this._ctx) { // if not unmounted\n      updateLayout(this)()\n      this._ctx.clearRect(0, 0, this.props.width, this.props.height);\n      drawNode(this._ctx, this)\n      adapter.requestAnimationFrame(this.ready);\n    }\n  }\n\n  private ready = () => {\n    this._ready = true;\n    if (this._next) {\n      this._next = false;\n      this.draw();\n    }\n  }\n\n  public destory() {\n    if (this._ctx) {\n      this._ctx.clearRect(0, 0, this.props.width, this.props.height)\n      this._ctx = null\n    }\n  }\n}","import { Node } from \"./Node\";\nimport { getStyleFromNode, getFrameFromNode, sortByZIndexAscending } from \"./utils\";\n\nfunction getRadius(style: any) {\n  return {\n    tl: style.borderTopLeftRadius || style.borderRadius || 0,\n    tr: style.borderTopRightRadius || style.borderRadius || 0,\n    bl: style.borderBottomLeftRadius || style.borderRadius || 0,\n    br: style.borderBottomRightRadius || style.borderRadius || 0,\n  }\n}\n\nexport function drawNode(ctx: CanvasRenderingContext2D, node: Node) {\n  const style = getStyleFromNode(node)\n  const frame = getFrameFromNode(node)\n\n  if (style.opacity <= 0) return\n\n  ctx.save()   // Area Range\n  // Opacity:\n  if (style.opacity !== null && style.opacity < 1) {\n    ctx.globalAlpha = style.opacity;\n  }\n  // Translation:\n  if (style.translateX || style.translateY) {\n    ctx.translate(style.translateX || 0, style.translateY || 0);\n  }\n  // Rotate && Scale\n  if (style.rotate || style.scaleX || style.scaleY || style.scale) {\n    // Origin Center\n    const originX = frame.x + frame.width / 2\n    const originY = frame.y + frame.height / 2\n    ctx.translate(originX, originY);\n    if (style.rotate)\n      ctx.rotate(style.rotate);\n    if (style.scaleX || style.scaleY || style.scale)\n      ctx.scale(style.scale || style.scaleX || 0, style.scale || style.scaleY || 0);\n    ctx.translate(-originX, -originY);\n  }\n\n\n  // Draw Path\n  const radius = getRadius(style)\n  ctx.beginPath();\n  ctx.moveTo(frame.x + radius.tl, frame.y);\n  ctx.arcTo(frame.x + frame.width, frame.y, frame.x + frame.width, frame.y + frame.height, radius.tr);\n  ctx.arcTo(frame.x + frame.width, frame.y + frame.height, frame.x, frame.y + frame.height, radius.br);\n  ctx.arcTo(frame.x, frame.y + frame.height, frame.x, frame.y, radius.bl);\n  ctx.arcTo(frame.x, frame.y, frame.x + frame.width, frame.y, radius.tl);\n  ctx.closePath();\n\n  if (style.overflow === 'hidden')\n    ctx.clip()\n\n  ctx.save()   // Draw Self Start\n  // Background color & Shadow\n  const background = style.backgroundColor || 'transparent'\n  if (background !== 'transparent') {\n    // Shadow:\n    if (style.shadowColor) {\n      ctx.shadowBlur = style.shadowBlur;\n      ctx.shadowColor = style.shadowColor;\n      ctx.shadowOffsetX = style.shadowOffsetX;\n      ctx.shadowOffsetY = style.shadowOffsetY;\n    }\n    ctx.fillStyle = background;\n    ctx.fill();\n  }\n\n  // Border with border radius:\n  if (style.borderColor && style.borderWidth > 0) {\n    ctx.lineWidth = style.borderWidth;\n    ctx.strokeStyle = style.borderColor;\n    ctx.stroke();\n  }\n  ctx.restore() // Draw Self  End\n\n  if (node.props.customDrawer) {\n    ctx.save() // Draw Inner\n    node.props.customDrawer(ctx, node);\n    ctx.restore()\n  }\n\n  // Draw child layers, sorted by their z-index.\n  node.children\n    .slice()\n    .sort(sortByZIndexAscending)\n    .forEach(child => {\n      drawNode(ctx, child);\n    });\n\n  ctx.restore()\n}","import React from 'react';\nimport { Text, View, Image, Touchable, ScrollView, LinearGradient } from '../revas';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.card} pointerEvents=\"box-none\">\n        <Image style={styles.logo}\n          src={require('./logo.png')} />\n        <Text style={styles.text} numberOfLines={2}>\n          Revas让你可以用React和Flexible CSS，在Canvas上绘制高性能交互式界面~{'🎉'}\n        </Text>\n        <LinearGradient style={styles.decorator} colors={['#9254DE', '#B37FEB', '#91D5FF', '#40A9FF']} />\n        <Touchable style={styles.btn} onPress={() => alert('Enjoy!~🎉')}>\n          <Text style={styles.btnText}>Go</Text>\n        </Touchable>\n      </View>\n      <ScrollView style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}>\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#abcdef',\n  },\n  card: {\n    padding: 20,\n    margin: 10,\n    borderRadius: 10,\n    shadowBlur: 20,\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffsetX: 0,\n    shadowOffsetY: 5,\n    backgroundColor: '#fff',\n    // alignItems: 'center',\n    zIndex: 1,\n  },\n  decorator: {\n    height: 4, borderRadius: 2,\n    margin: 10, marginLeft: 40, marginRight: 40\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    textAlign: 'center',\n    // width: 280,\n    padding: 10,\n    paddingBottom: 0\n  },\n  logo: {\n    // width: 200,\n    height: 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    resizeMode: 'contain'\n  },\n  btn: {\n    justifyContent: 'center',\n    height: 40, backgroundColor: 'blue',\n    // width: 150\n  },\n  btnText: {\n    fontSize: 20,\n    textAlign: 'center',\n    height: 30,\n    lineHeight: 30,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL as string,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import renderer from '../core/reconciler'\nimport { noop } from '../core/utils'\nimport { Container } from '../core/Container'\nimport { RevasTouch, RevasTouchEvent } from '../core/Node'\n\nfunction createRevasTouchEvent(e: TouchEvent): RevasTouchEvent {\n  const touches: { [key: number]: RevasTouch } = {}\n  const type: any = e.type === 'touchcancel' ? 'touchend' : e.type\n  Object.values(e.changedTouches).forEach(touch => {\n    const { offsetLeft, offsetTop } = touch.target as HTMLCanvasElement\n    touches[touch.identifier] = {\n      identifier: touch.identifier,\n      x: touch.clientX - offsetLeft,\n      y: touch.clientY - offsetTop\n    }\n  })\n  return { type, touches, timestamp: e.timeStamp || Date.now() }\n}\n\nexport function render(app: React.ReactNode, canvas: HTMLCanvasElement) {\n  const container = new Container(canvas.getContext('2d'), canvas.clientWidth, canvas.clientHeight)\n  canvas.ontouchstart = canvas.ontouchmove = canvas.ontouchend =\n    canvas.ontouchcancel = e => container.handleTouch(createRevasTouchEvent(e))\n  canvas.onresize = e => container.handleResize(canvas.clientWidth, canvas.clientHeight)\n  const fiber = renderer.createContainer(container, false, false)\n  renderer.updateContainer(app, fiber, null, noop)\n  return {\n    unmount() {\n      renderer.updateContainer(null, fiber, null, noop)\n      canvas.ontouchstart = canvas.ontouchmove = canvas.ontouchend = null\n      container.destory()\n    }\n  }\n}\n","import React from 'react';\nimport { render } from './revas'\nimport App from './develop/App';\nimport * as serviceWorker from './develop/serviceWorker';\nimport createCanvas from './develop/createCanvas'\n\nimport './develop/index.css';\n\n// eslint-disable-next-line\nconst app = render(\n  React.createElement(App),\n  createCanvas()\n)\n\n// try unmount\n// setTimeout(() => {\n//   app.unmount()\n// }, 5000);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default function () {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')!\n  function onresize(e?: any) {\n    if (window.innerHeight > 0 && window.innerHeight > 0\n      && (window.innerHeight !== canvas.clientHeight\n        || window.innerWidth !== canvas.clientWidth)) {\n      const scale = window.devicePixelRatio\n      canvas.width = window.innerWidth * scale\n      canvas.height = window.innerHeight * scale\n      canvas.style.width = window.innerWidth + 'px'\n      canvas.style.height = window.innerHeight + 'px'\n      ctx.resetTransform()\n      ctx.scale(scale, scale)\n      e && canvas.onresize && canvas.onresize(e)\n    }\n  }\n  onresize()\n  canvas.className = 'canvas'\n  document.body.appendChild(canvas)\n  window.onorientationchange = window.onresize = () => requestAnimationFrame(onresize)// (e: any) => setTimeout(() => onresize(e), 500);\n  return canvas\n}\n"],"sourceRoot":""}