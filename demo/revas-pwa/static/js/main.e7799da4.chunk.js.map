{"version":3,"sources":["develop/logo.png","revas/components/View.ts","revas/core/utils.ts","revas/components/common/drawText.ts","revas/components/Text.ts","revas/components/common/imageLoader.ts","revas/components/common/drawImage.ts","revas/components/Image.ts","revas/components/Touchable.ts","revas/components/common/Scroller.ts","revas/components/ScrollView.ts","revas/components/LinearGradient.ts","revas/core/Node.ts","revas/core/reconciler.ts","revas/core/layout.ts","revas/core/touch.ts","revas/core/Container.ts","revas/core/draw.ts","develop/App.tsx","develop/serviceWorker.ts","revas/web/render.ts","index.tsx","develop/createCanvas.ts"],"names":["module","exports","View","props","React","noop","EMPTY_OBJECT","Object","freeze","EMPTY_ARRAY","checkAndRemove","parent","child","index","children","indexOf","splice","appendChild","push","removeChild","insertBefore","before","beforeIndex","getStyleFromNode","node","style","getFrameFromNode","frame","sortByZIndexAscending","a","b","styleA","styleB","zIndex","sortByZIndexDescending","clamp","n","min","max","Math","ASTRAL_RANGE","WORD_RANGE","adapter","createImage","Image","createOffscreenCanvas","requestAnimationFrame","cb","DEFAULT_TEXTSTYLE","fontFamily","fontWeight","fontSize","color","fontStyle","textBaseline","getTextStyleFromNode","textStyle","lineHeight","splitContent","content","wordBreak","match","str","getWords","measureText","ctx","width","Array","isArray","join","getTextFromNode","font","fillStyle","lines","chars","numberOfLines","_width","_text","i","length","pop","lastLine","text","char","charWidth","slice","measureLines","drawText","textShadowColor","shadowBlur","textShadowBlur","shadowColor","shadowOffsetX","textShadowOffsetX","shadowOffsetY","textShadowOffsetY","line","x","textAlign","fillText","y","Text","state","height","setState","this","others","customDrawer","CachedImage","src","image","targets","Set","_ready","onload","from","values","forEach","target","onerror","Error","size","add","delete","cache","Map","get","has","set","cached","remove","empty","drawImage","imageLoader","actualSize","focusPoint","resizeMode","scale","scaledSize","sw","round","sh","dw","dh","dx","dy","sx","sy","ImageView","ready","onReady","prev","Touchable","touching","_start","_tid","_onTouchStart","e","keys","touches","_onTouchEnd","abs","onPress","onTouchStart","onTouchEnd","opacity","activeOpacity","defaultProps","Scroller","handler","top","_lastY","_lastTimestamp","_v","touchStart","timestamp","touchMove","moveY","duration","change","touchEnd","Date","now","afterEnd","friction","_top","vy","vx","v","ScrollView","_height","_contentHeight","_scroller","onScroll","_onLayout","_checkLayout","_onContentLayout","onTouchMove","onLayout","translateY","LinearGradient","drawGradient","colors","start","end","grad","createLinearGradient","addColorStop","fill","Frame","Node","type","ReactReconciler","supportsHydration","supportsPersistence","supportsMutation","isPrimaryRenderer","createInstance","container","createTextInstance","appendInitialChild","appendChildToContainer","removeChildFromContainer","insertInContainerBefore","finalizeInitialChildren","getPublicInstance","instance","prepareUpdate","commitUpdate","updatePayload","oldProps","newProps","prepareForCommit","resetAfterCommit","draw","resetTextContent","getRootHostContext","getChildHostContext","parentHostContext","shouldSetTextContent","shouldDeprioritizeSubtree","scheduleDeferredCallback","cancelDeferredCallback","setTimeout","clearTimeout","noTimeout","computeLayout","require","updateLayout","root","yogas","createYoga","layout","yoga","left","map","eventNodeHolder","getNodeByTouch","touch","findNodeByPoint","pointerEvents","sort","identifier","LISTENER_MAP","touchstart","touchmove","touchend","Container","_next","_ctx","handleTouch","evt","emitted","WeakSet","funcName","emitTouch","handleResize","clearRect","drawNode","save","globalAlpha","translateX","translate","rotate","scaleX","scaleY","originX","originY","radius","tl","borderTopLeftRadius","borderRadius","tr","borderTopRightRadius","bl","borderBottomLeftRadius","br","borderBottomRightRadius","getRadius","beginPath","moveTo","arcTo","closePath","overflow","clip","background","backgroundColor","borderColor","borderWidth","lineWidth","strokeStyle","stroke","restore","styles","flex","justifyContent","card","padding","margin","decorator","marginLeft","marginRight","paddingBottom","logo","btn","btnText","Boolean","window","location","hostname","app","canvas","getContext","clientWidth","clientHeight","ontouchstart","ontouchmove","ontouchend","ontouchcancel","changedTouches","offsetLeft","offsetTop","clientX","clientY","timeStamp","createRevasTouchEvent","onresize","fiber","renderer","createContainer","updateContainer","render","createElement","alert","position","right","bottom","document","innerHeight","innerWidth","devicePixelRatio","resetTransform","className","body","onorientationchange","createCanvas","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7799da4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.48529616.png\";","import * as React from 'react'\nimport { NodeProps } from '../core/Node'\n\nexport default function View(props: NodeProps) {\n  return React.createElement('View', props)\n}","import { Node } from './Node'\n\nexport function noop(): any { }\nexport const EMPTY_OBJECT = Object.freeze({})\nexport const EMPTY_ARRAY = Object.freeze([])\n\nfunction checkAndRemove(parent: Node, child: Node) {\n  const index = parent.children.indexOf(child);\n  if (index >= 0) {\n    parent.children.splice(index, 1);\n  }\n}\n\nexport function appendChild(parent: Node, child: Node) {\n  checkAndRemove(parent, child)\n  parent.children.push(child);\n  child.parent = parent\n}\n\nexport function removeChild(parent: Node, child: Node) {\n  checkAndRemove(parent, child)\n  child.parent = void 0\n}\n\nexport function insertBefore(parent: Node, child: Node, before: Node) {\n  checkAndRemove(parent, child)\n  const beforeIndex = parent.children.indexOf(before);\n  parent.children.splice(beforeIndex, 0, child);\n  child.parent = parent\n}\n\nexport function getStyleFromNode(node: Node) {\n  const { props: { style = EMPTY_OBJECT } } = node\n  return style\n}\n\nexport function getFrameFromNode(node: Node) {\n  const { frame } = node\n  return frame\n}\n\nexport function sortByZIndexAscending(a: Node, b: Node) {\n  const styleA = getStyleFromNode(a)\n  const styleB = getStyleFromNode(b)\n  return (styleA.zIndex || 0) - (styleB.zIndex || 0);\n}\n\nexport function sortByZIndexDescending(a: Node, b: Node) {\n  return -sortByZIndexAscending(a, b)\n}\n\n\nexport function clamp(n: number, min: number, max: number) {\n  return Math.min(Math.max(n, min), max);\n};\n\nconst ASTRAL_RANGE = /\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g\nconst WORD_RANGE = /\\w+|\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nexport function getChars(str: string): readonly string[] {\n  return str.match(ASTRAL_RANGE) || EMPTY_ARRAY\n}\n\nexport function getWords(str: string): readonly string[] {\n  return str.match(WORD_RANGE) || EMPTY_ARRAY\n}\n\nexport type RevasAdapter = {\n  createImage: () => HTMLImageElement\n  createOffscreenCanvas: () => HTMLCanvasElement\n  requestAnimationFrame: (cb: any) => any\n}\n\nexport const adapter: RevasAdapter = {\n  createImage: () => new Image(),\n  createOffscreenCanvas: noop,\n  requestAnimationFrame: (cb: any) => requestAnimationFrame(cb)\n}","import { Node } from \"../../core/Node\"\nimport { getChars, getFrameFromNode, getWords } from \"../../core/utils\"\n\nconst DEFAULT_TEXTSTYLE = {\n  fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\",\n  fontWeight: 'normal',\n  fontSize: 14,\n  color: '#000',\n  fontStyle: 'normal',\n  textBaseline: 'middle',\n}\n\nfunction getTextFromNode(node: Node) {\n  const { content } = node.props\n  if (typeof content === 'string') {\n    return content\n  } else if (Array.isArray(content)) {\n    return content.join('')\n  }\n  return ''\n}\n\nfunction getTextStyleFromNode(node: Node) {\n  const style = { ...DEFAULT_TEXTSTYLE, ...node.props.textStyle }\n  style.lineHeight = style.lineHeight || (style.fontSize * 1.1)\n  return style\n}\n\n// TODO: numberOfLines\nfunction measureLines(\n  ctx: CanvasRenderingContext2D,\n  chars: readonly string[],\n  width: number,\n  numberOfLines: number = 1\n) {\n  const lines: { width: number, text: string }[] = []\n  let _width = 0\n  let _text = ''\n  for (let i = 0; i < chars.length; i++) {\n    if (numberOfLines > 0 && lines.length > numberOfLines) {\n      lines.pop()\n      const lastLine = lines[lines.length - 1]\n      lastLine.text = lastLine.text + '...'\n      lastLine.width = ctx.measureText(lastLine.text).width\n      return lines\n    }\n    const char = chars[i]\n    if (char === '\\n') {\n      lines.push({ width: _width, text: _text })\n      _width = 0\n      _text = ''\n    } else {\n      const charWidth = ctx.measureText(char).width\n      if (charWidth + _width > width) {\n        _text && lines.push({ width: _width, text: _text })\n        _width = charWidth\n        _text = char\n      } else {\n        _width += charWidth\n        _text += char\n      }\n    }\n  }\n  _text && lines.push({ width: _width, text: _text })\n  if (numberOfLines > 0 && lines.length > numberOfLines) {\n    lines.pop()\n    const lastLine = lines[lines.length - 1]\n    lastLine.text = lastLine.text.slice(0, -3) + '...'\n    lastLine.width = ctx.measureText(lastLine.text).width\n    return lines\n  }\n  return lines\n}\n\nfunction splitContent(content: string, wordBreak: string) {\n  switch (wordBreak) {\n    case 'break-all':\n      return getChars(content)\n    case 'keep-all':\n      return [content]\n    default:\n      return getWords(content)\n  }\n}\n\nexport function measureText(ctx: CanvasRenderingContext2D, node: Node): [any[], number] {\n  const frame = getFrameFromNode(node)\n  if (frame.width === 0) return [[], 0]\n  const content = getTextFromNode(node)\n  if (!content) return [[], 0]\n  const style = getTextStyleFromNode(node)\n  if (style.color === 'transparent') return [[], 0]\n\n  // Apply Styles\n  ctx.font = `${style.fontStyle} ${style.fontWeight} ${style.fontSize}px ${style.fontFamily}`\n  ctx.fillStyle = style.color\n  ctx.textBaseline = style.textBaseline\n\n  const lines = measureLines(\n    ctx,\n    splitContent(content, style.wordBreak),\n    frame.width,\n    node.props.numberOfLines\n  )\n  return [lines, style.lineHeight * lines.length]\n}\n\n\nexport function drawText(ctx: CanvasRenderingContext2D, node: Node, lines: any[]) {\n  const frame = getFrameFromNode(node)\n  const style = getTextStyleFromNode(node)\n\n  // Shadow:\n  if (style.textShadowColor) {\n    ctx.shadowBlur = style.textShadowBlur;\n    ctx.shadowColor = style.textShadowColor;\n    ctx.shadowOffsetX = style.textShadowOffsetX;\n    ctx.shadowOffsetY = style.textShadowOffsetY;\n  }\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i]\n    let x = frame.x\n    switch (style.textAlign) {\n      case 'center':\n        x = x + (frame.width / 2) - (line.width / 2);\n        break;\n      case 'right':\n        x = x + frame.width - line.width;\n        break;\n    }\n    ctx.fillText(line.text, x, style.lineHeight * (i + 0.5) + frame.y);\n  }\n}\n","import * as React from 'react'\nimport { drawText, measureText } from './common/drawText'\nimport { NodeProps, Node } from '../core/Node'\n\nexport type TextProps = {\n  numberOfLines?: number\n} & NodeProps\n\nexport default class Text extends React.Component<TextProps> {\n  state = { height: 0 }\n\n  drawText = (ctx: CanvasRenderingContext2D, node: Node) => {\n    const [lines, height] = measureText(ctx, node)\n    if (height !== this.state.height) {\n      this.setState({ height })\n    } else {\n      drawText(ctx, node, lines)\n    }\n  }\n  render() {\n    const { children, numberOfLines, ...others } = this.props as any\n    return React.createElement('View', others,\n      React.createElement('Text', {\n        content: children,\n        customDrawer: this.drawText,\n        textStyle: others.style,\n        style: this.state,\n        numberOfLines\n      })\n    )\n  }\n}\n\n// TODO: nested text support","import { adapter } from '../../core/utils'\n\nclass CachedImage {\n  readonly image = adapter.createImage()\n  private readonly targets = new Set<Function>()\n  private _ready = false\n  get empty() {\n    return this.targets.size === 0\n  }\n  constructor(\n    public readonly src: string\n  ) {\n    if (!this.image) {\n      throw new Error('Revas: createImage must be initialized')\n    }\n    this.image.onload = this.onload\n    this.image.onerror = this.onerror\n    this.image.src = src\n  }\n  onload = () => {\n    this._ready = true\n    Array.from(this.targets.values()).forEach(target => target(this.image))\n  }\n  onerror = () => { }\n  add(target: Function) {\n    this.targets.add(target)\n    if (this._ready) {\n      target(this.image)\n    }\n  }\n  remove(target: Function) {\n    this.targets.delete(target)\n  }\n}\n\nconst cache = new Map<string, CachedImage>()\n\n\nexport function get(src: string, target?: Function) {\n  if (!cache.has(src)) {\n    cache.set(src, new CachedImage(src))\n  }\n  const cached = cache.get(src)!\n  target && cached.add(target)\n  return cached.image\n}\n\nexport function remove(src: string, target: Function) {\n  if (cache.has(src)) {\n    const cached = cache.get(src)!\n    cached.remove(target)\n    if (cached.empty) {\n      cache.delete(src)\n    }\n  }\n}","import { Node } from '../../core/Node'\nimport * as imageLoader from './imageLoader'\nimport { clamp, getStyleFromNode, getFrameFromNode } from '../../core/utils'\n\nexport default function drawImage(ctx: CanvasRenderingContext2D, node: Node) {\n  const image = imageLoader.get(node.props.src)\n  if (image.height <= 0) return\n  const frame = getFrameFromNode(node)\n  const { width, height, x, y } = frame\n  if (width <= 0 || height <= 0) return\n  const style = getStyleFromNode(node)\n\n\n  const actualSize = {\n    width: image.width,\n    height: image.height\n  };\n\n  const focusPoint = style.focusPoint || {\n    x: actualSize.width * 0.5,\n    y: actualSize.height * 0.5\n  };\n\n  if (style.resizeMode === 'contain') {\n\n    const scale = Math.min(\n      width / actualSize.width,\n      height / actualSize.height\n    ) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sw = Math.round(actualSize.width);\n    const sh = Math.round(actualSize.height);\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(scaledSize.width);\n    const dh = Math.round(scaledSize.height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round((width - scaledSize.width) / 2 + x);\n    const dy = Math.round((height - scaledSize.height) / 2 + y);\n\n    ctx.drawImage(image, 0, 0, sw, sh, dx, dy, dw, dh);\n  } else {\n\n    const scale = Math.max(\n      width / actualSize.width,\n      height / actualSize.height\n    ) || 1;\n\n    const scaledSize = {\n      width: actualSize.width * scale,\n      height: actualSize.height * scale\n    };\n\n    // Clip the image to rectangle (sx, sy, sw, sh).\n    const sx = Math.round(clamp(width * 0.5 - focusPoint.x * scale, width - scaledSize.width, 0)) * (-1 / scale);\n    const sy = Math.round(clamp(height * 0.5 - focusPoint.y * scale, height - scaledSize.height, 0)) * (-1 / scale);\n    const sw = Math.round(actualSize.width - (sx * 2));\n    const sh = Math.round(actualSize.height - (sy * 2));\n\n    // Scale the image to dimensions (dw, dh).\n    const dw = Math.round(width);\n    const dh = Math.round(height);\n\n    // Draw the image on the canvas at coordinates (dx, dy).\n    const dx = Math.round(x);\n    const dy = Math.round(y);\n\n    ctx.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n\n  }\n}","import * as React from 'react'\nimport * as imageLoader from './common/imageLoader'\nimport drawImage from './common/drawImage'\nimport { NodeProps } from '../core/Node'\n\nexport type ImageViewProps = {\n  src: string\n} & NodeProps\n\nexport default class ImageView extends React.Component<ImageViewProps> {\n  state = {\n    ready: false\n  }\n  componentDidMount() {\n    if (this.props.src) {\n      imageLoader.get(this.props.src, this.onReady)\n    }\n  }\n  componentDidUpdate(prev: any) {\n    if (prev.src !== this.props.src) {\n      if (prev.src)\n        imageLoader.remove(prev.src, this.onReady)\n      if (this.props.src)\n        imageLoader.get(this.props.src, this.onReady)\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.src)\n      imageLoader.remove(this.props.src, this.onReady)\n  }\n  onReady = () => {\n    this.setState({ ready: true })\n  }\n  render() {\n    return React.createElement('Image', {\n      customDrawer: this.state.ready ? drawImage : void 0,\n      ...this.props\n    })\n  }\n}\n","import * as React from 'react'\nimport { BaseProps, RevasTouchEvent, RevasTouch } from '../core/Node'\n\nexport type TouchableProps = {\n  onPress: Function\n  activeOpacity?: number\n} & BaseProps\n\nexport default class Touchable extends React.Component<TouchableProps> {\n  static defaultProps = {\n    activeOpacity: 0.7\n  }\n\n  state = {\n    touching: false\n  }\n\n  private _start?: RevasTouch\n  private _tid = 0\n\n  private _onTouchStart = (e: RevasTouchEvent) => {\n    this._tid = +Object.keys(e.touches)[0]\n    this._start = e.touches[this._tid]\n    this.setState({ touching: true })\n  }\n\n  private _onTouchEnd = (e: RevasTouchEvent) => {\n    if (this._start && e.touches[this._tid]) {\n      if (Math.abs(this._start.x - e.touches[this._tid].x) < 3\n        && Math.abs(this._start.y - e.touches[this._tid].y) < 3) {\n        this.props.onPress && this.props.onPress()\n\n      }\n    }\n    this.setState({ touching: false })\n  }\n\n  render() {\n    return React.createElement('Touchable', {\n      onTouchStart: this._onTouchStart,\n      onTouchEnd: this._onTouchEnd,\n      ...this.props,\n      style: {\n        ...this.props.style,\n        opacity: this.state.touching ? this.props.activeOpacity : 1\n      }\n    })\n  }\n}","import { RevasTouchEvent } from '../../core/Node'\nimport { clamp, adapter } from '../../core/utils'\n\nexport interface RevasScrollEvent {\n  x: number,\n  y: number,\n  vx: number,\n  vy: number,\n  timestamp: number\n}\n\nexport default class Scroller {\n  top = 0\n\n  constructor(\n    private handler: (e: RevasScrollEvent) => any,\n    public max = -1\n  ) { }\n\n  private _lastY = -1\n  private _lastTimestamp = 0\n  private _v = 0\n  private _tid = 0\n\n  touchStart = (e: RevasTouchEvent) => {\n    if (this._lastY < 0) {\n      this._tid = +Object.keys(e.touches)[0]\n      this._lastTimestamp = e.timestamp\n      this._lastY = e.touches[this._tid].y\n    }\n  }\n\n  touchMove = (e: RevasTouchEvent) => {\n    if (this._lastY >= 0 && e.touches[this._tid]) {\n      const { y } = e.touches[this._tid]\n      const moveY = this._lastY - y\n      const duration = e.timestamp - this._lastTimestamp\n      this._v = moveY / duration\n      this._lastTimestamp = e.timestamp\n      this._lastY = y\n      this.change(moveY)\n    }\n  }\n\n  touchEnd = (e: RevasTouchEvent) => {\n    if (this._lastY >= 0) {\n      this._lastTimestamp = Date.now()\n      this._lastY = -1\n      adapter.requestAnimationFrame(this.afterEnd)\n    }\n  }\n\n  afterEnd = () => {\n    if (this._lastY < 0 && Math.abs(this._v) > 0.1) {\n      const timestamp = Date.now()\n      const duration = timestamp - this._lastTimestamp\n      this._v = friction(this._v, duration)\n      const moveY = this._v * duration\n      this._lastTimestamp = timestamp\n      this.change(moveY)\n      adapter.requestAnimationFrame(this.afterEnd)\n    }\n  }\n\n  change(top: number) {\n    const _top = clamp(this.top + top, 0, this.max > 0 ? this.max : 0)\n    // check validate\n    if (_top !== this.top) {\n      this.top = _top\n      this.handler({\n        y: this.top, vy: this._v,\n        x: 0, vx: 0,\n        timestamp: this._lastTimestamp\n      })\n    } else if (this._lastY < 0) {\n      this._v = 0\n    }\n  }\n}\n\nfunction friction(v: number, duration: number) {\n  return v - (duration * 0.005 * v)\n}","import * as React from 'react'\nimport { NodeProps, Frame } from '../core/Node'\nimport Scroller, { RevasScrollEvent } from './common/Scroller'\n\nexport type ScrollViewProps = {\n  onScroll?: (e: RevasScrollEvent) => any\n} & NodeProps\n\nexport default class ScrollView extends React.Component<ScrollViewProps> {\n  state = {\n    top: 0\n  }\n\n  private _height = -1\n  private _contentHeight = -1\n\n  private _scroller = new Scroller(e => {\n    this.setState({ top: e.y })\n    this.props.onScroll && this.props.onScroll(e)\n  })\n\n  private _onLayout = (frame: Frame) => {\n    if (this._height !== frame.height) {\n      this._height = frame.height\n      this._checkLayout()\n    }\n  }\n\n  private _onContentLayout = (frame: Frame) => {\n    if (this._contentHeight !== frame.height) {\n      this._contentHeight = frame.height\n      this._checkLayout()\n    }\n  }\n\n  private _checkLayout = () => {\n    const max = this._contentHeight - this._height\n    if (max > 0 && max !== this._scroller.max) {\n      this._scroller.max = max\n      this._scroller.change(0)\n    }\n  }\n\n  render() {\n    const { children, ...others } = this.props\n    return React.createElement(\n      'Scrollable',\n      {\n        ...others,\n        onTouchStart: this._scroller.touchStart,\n        onTouchMove: this._scroller.touchMove,\n        onTouchEnd: this._scroller.touchEnd,\n        onLayout: this._onLayout,\n      },\n      React.createElement('ScrollContent', {\n        onLayout: this._onContentLayout,\n        style: {\n          translateY: -this.state.top\n        },\n        children\n      })\n    )\n  }\n}\n","import * as React from 'react'\nimport { NodeProps, Node } from '../core/Node'\nimport { getFrameFromNode } from '../core/utils'\n\nexport type LinearGradientProps = {\n  start?: { x: number, y: number }\n  end?: { x: number, y: number }\n  colors: string[]\n} & NodeProps\n\nexport default class LinearGradient extends React.Component<LinearGradientProps> {\n\n  render() {\n    return React.createElement('LinearGradient', {\n      ...this.props,\n      customDrawer: drawGradient\n    })\n  }\n}\n\nfunction drawGradient(ctx: CanvasRenderingContext2D, node: Node) {\n  const { colors } = node.props as LinearGradientProps\n  if (colors && colors.length > 0) {\n    const {\n      start = { x: 0, y: 0 },\n      end = { x: 1, y: 0 }\n    } = node.props as LinearGradientProps\n    const frame = getFrameFromNode(node)\n    const grad = ctx.createLinearGradient(\n      start.x * frame.width + frame.x,\n      start.y * frame.height + frame.y,\n      end.x * frame.width + frame.x,\n      end.y * frame.height + frame.y\n    )\n    for (let i = 0; i < colors.length; i++) {\n      grad.addColorStop(i / (colors.length - 1), colors[i]);\n    }\n    ctx.fillStyle = grad;\n    ctx.fill();\n  }\n\n}","import { ReactNode } from 'react'\n\n\nexport class Frame {\n  constructor(\n    public x = 0,\n    public y = 0,\n    public width = 0,\n    public height = 0\n  ) { }\n}\n\nexport class Node {\n  public readonly children: Node[] = []\n  public frame = new Frame()\n  public parent?: Node\n  constructor(\n    public readonly type: string,\n    public props: NodeProps & any,\n  ) { }\n}\n\nexport interface RevasTouch {\n  identifier: number,\n  x: number,\n  y: number,\n}\n\nexport type RevasTouchType = 'touchstart' | 'touchmove' | 'touchend'\n\nexport interface RevasTouchEvent {\n  type: RevasTouchType\n  touches: { [key: number]: RevasTouch }\n  timestamp: number\n}\n\nexport type RevasTouchEventListener = (event: RevasTouchEvent) => any\n\nexport interface BaseProps {\n  children?: ReactNode,\n  style?: any,\n}\n\nexport interface NodeProps extends BaseProps {\n  onTouchStart?: RevasTouchEventListener\n  onTouchMove?: RevasTouchEventListener\n  onTouchEnd?: RevasTouchEventListener\n  onLayout?: (frame: Frame) => any\n  pointerEvents?: 'auto' | 'none' | 'box-none'\n}","import ReactReconciler from 'react-reconciler';\nimport { Node } from './Node'\nimport { appendChild, noop, removeChild, insertBefore } from './utils'\nimport { Container } from './Container';\n\nexport default ReactReconciler({\n  supportsHydration: false,\n  supportsPersistence: false,\n  supportsMutation: true,\n  isPrimaryRenderer: true,\n\n  createInstance(type: string, props: any, container: Container) {\n    return new Node(type, props);\n  },\n\n  createTextInstance() {\n    throw new Error('Revas: string cannot be child out of <Text/>')\n  },\n\n  appendInitialChild: appendChild,\n  appendChild: appendChild,\n  appendChildToContainer: appendChild,\n  removeChild: removeChild,\n  removeChildFromContainer: removeChild,\n  insertBefore: insertBefore,\n  insertInContainerBefore: insertBefore,\n\n  finalizeInitialChildren() {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareUpdate() {\n    return true;\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.props = newProps\n  },\n\n  prepareForCommit: noop,\n\n  resetAfterCommit(container: Container) {\n    container.draw()\n  },\n\n  resetTextContent: noop,\n\n  getRootHostContext() {\n    return {}\n  },\n\n  getChildHostContext(parentHostContext: object) {\n    return parentHostContext;\n  },\n\n  shouldSetTextContent() {\n    return false\n  },\n\n  shouldDeprioritizeSubtree: () => false,\n\n  scheduleDeferredCallback: noop,\n  cancelDeferredCallback: noop,\n  setTimeout: setTimeout,\n  clearTimeout: clearTimeout,\n  noTimeout: -1,\n  now: Date.now,\n})\n","// import Yoga from 'yoga-layout-prebuilt'\nimport { Node, Frame } from './Node'\n// import apply from './style'\nimport { getStyleFromNode } from './utils'\n\n// function _updateLayout(node: Node): [Function, Yoga.YogaNode] {\n//   const yoga = Yoga.Node.create()\n//   const children: Function[] = []\n//   apply(yoga, getStyleFromNode(node))\n//   for (let i = 0; i < node.children.length; i++) {\n//     const child = node.children[i]\n//     const [f, y] = _updateLayout(child)\n//     const index = children.push(f)\n//     yoga.insertChild(y, index - 1)\n//   }\n//   function process(x = 0, y = 0) {\n//     const { left, top, width, height } = yoga.getComputedLayout()\n//     node.frame = new Frame(x + left, y + top, width, height)\n//     node.props.onLayout && node.props.onLayout(node.frame)\n//     for (let i = 0; i < children.length; i++) {\n//       children[i](node.frame.x, node.frame.y)\n//     }\n//     yoga.free()\n//   }\n//   return [process, yoga]\n// }\n\n// export function updateLayout(root: Node) {\n//   const [process, yoga] = _updateLayout(root)\n//   yoga.calculateLayout(root.props.width, root.props.height, Yoga.DIRECTION_LTR)\n//   return process\n// }\n\nconst computeLayout = require('css-layout')\n\nexport interface YogaNode {\n  node: Node,\n  style: any, layout: any,\n  children: YogaNode[]\n}\n\nexport function updateLayout(root: Node) {\n  const yogas = createYoga(root)\n  yogas.style = root.props\n  return () => {\n    computeLayout(yogas)\n    layout(yogas)\n  }\n}\n\n\nfunction createYoga(node: Node): any {\n  return {\n    style: getStyleFromNode(node),\n    children: node.children.map(createYoga),\n    node,\n  }\n}\n\nfunction layout(yoga: YogaNode, x = 0, y = 0) {\n  const { left, top, width, height } = yoga.layout\n  const { node, children } = yoga\n  node.frame = new Frame(x + left, y + top, width, height)\n  node.props.onLayout && node.props.onLayout(node.frame)\n  for (let i = 0; i < children.length; i++) {\n    layout(children[i], node.frame.x, node.frame.y)\n  }\n}\n\n","import { getFrameFromNode, sortByZIndexDescending } from \"./utils\"\nimport { Node, RevasTouchEvent, RevasTouchType, RevasTouch } from \"./Node\"\n\nfunction findNodeByPoint(node: Node, x: number, y: number): Node | void {\n  if (node.props.pointerEvents === 'none') return\n  const children = node.children.slice().sort(sortByZIndexDescending)\n  for (let i = 0; i < children.length; i++) {\n    const target = findNodeByPoint(children[i], x, y)\n    if (target) return target\n  }\n  if (node.props.pointerEvents === 'box-none') return\n  const frame = getFrameFromNode(node)\n  if (frame.x < x && frame.y < y\n    && x <= frame.x + frame.width\n    && y <= frame.y + frame.height) {\n    return node\n  }\n}\n\nconst eventNodeHolder: { [key: number]: Node } = {}\n\nexport function getNodeByTouch(root: Node, type: RevasTouchType, touch: RevasTouch) {\n  if (type === 'touchstart') {\n    const target = findNodeByPoint(root, touch.x, touch.y)\n    eventNodeHolder[touch.identifier] = target || root\n    return eventNodeHolder[touch.identifier]\n  } else if (type === 'touchmove') {\n    return eventNodeHolder[touch.identifier] || root\n  } else if (type === 'touchend') {\n    const target = eventNodeHolder[touch.identifier]\n    delete eventNodeHolder[touch.identifier]\n    return target || root\n  }\n  return root\n}\n\nconst LISTENER_MAP = {\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd'\n}\n\n\nexport function emitTouch(node: Node | void, e: RevasTouchEvent) {\n  const funcName = LISTENER_MAP[e.type]\n  if (funcName) {\n    while (node) {\n      if (node.props[funcName]\n        && node.props.pointerEvents !== 'box-none'\n        && node.props[funcName](e) === false) return\n      node = node.parent\n    }\n  }\n}","import { Node, RevasTouchEvent } from './Node'\nimport { updateLayout } from './layout'\nimport { drawNode } from './draw'\nimport { getNodeByTouch, emitTouch } from './touch'\nimport { adapter } from './utils'\n\nexport class Container extends Node {\n  private _ready = true\n  private _next = false\n  private _ctx?: CanvasRenderingContext2D | null\n\n  constructor(ctx: CanvasRenderingContext2D | null, width: number, height: number) {\n    super('root', { width, height })\n    this._ctx = ctx\n  }\n\n  public handleTouch = (evt: RevasTouchEvent) => {\n    const emitted = new WeakSet<Node>()\n    Object.values(evt.touches).forEach(touch => {\n      const node = getNodeByTouch(this, evt.type, touch)\n      // check if node is unmounted\n      if (node.parent && !emitted.has(node)) {\n        emitted.add(node)\n        emitTouch(node, evt)\n      }\n    })\n  }\n\n  public handleResize = (width: number, height: number) => {\n    if (width !== this.props.width\n      && height !== this.props.height) {\n      this.props.width = width\n      this.props.height = height\n      this.draw()\n    }\n  }\n\n  public draw = () => {\n    if (this._ready === false) {\n      this._next = true;\n      return;\n    }\n    this._ready = false;\n    if (this._ctx) { // if not unmounted\n      updateLayout(this)()\n      this._ctx.clearRect(0, 0, this.props.width, this.props.height);\n      drawNode(this._ctx, this)\n      adapter.requestAnimationFrame(this.ready);\n    }\n  }\n\n  private ready = () => {\n    this._ready = true;\n    if (this._next) {\n      this._next = false;\n      this.draw();\n    }\n  }\n\n  public destory() {\n    if (this._ctx) {\n      this._ctx.clearRect(0, 0, this.props.width, this.props.height)\n      this._ctx = null\n    }\n  }\n}","import { Node } from \"./Node\";\nimport { getStyleFromNode, getFrameFromNode, sortByZIndexAscending } from \"./utils\";\n\nfunction getRadius(style: any) {\n  return {\n    tl: style.borderTopLeftRadius || style.borderRadius || 0,\n    tr: style.borderTopRightRadius || style.borderRadius || 0,\n    bl: style.borderBottomLeftRadius || style.borderRadius || 0,\n    br: style.borderBottomRightRadius || style.borderRadius || 0,\n  }\n}\n\nexport function drawNode(ctx: CanvasRenderingContext2D, node: Node) {\n  const style = getStyleFromNode(node)\n  const frame = getFrameFromNode(node)\n\n  if (style.opacity <= 0) return\n\n  ctx.save()   // Area Range\n  // Opacity:\n  if (style.opacity !== null && style.opacity < 1) {\n    ctx.globalAlpha = style.opacity;\n  }\n  // Translation:\n  if (style.translateX || style.translateY) {\n    ctx.translate(style.translateX || 0, style.translateY || 0);\n  }\n  // Rotate && Scale\n  if (style.rotate || style.scaleX || style.scaleY || style.scale) {\n    // Origin Center\n    const originX = frame.x + frame.width / 2\n    const originY = frame.y + frame.height / 2\n    ctx.translate(originX, originY);\n    if (style.rotate)\n      ctx.rotate(style.rotate);\n    if (style.scaleX || style.scaleY || style.scale)\n      ctx.scale(style.scale || style.scaleX || 0, style.scale || style.scaleY || 0);\n    ctx.translate(-originX, -originY);\n  }\n\n\n  // Draw Path\n  const radius = getRadius(style)\n  ctx.beginPath();\n  ctx.moveTo(frame.x + radius.tl, frame.y);\n  ctx.arcTo(frame.x + frame.width, frame.y, frame.x + frame.width, frame.y + frame.height, radius.tr);\n  ctx.arcTo(frame.x + frame.width, frame.y + frame.height, frame.x, frame.y + frame.height, radius.br);\n  ctx.arcTo(frame.x, frame.y + frame.height, frame.x, frame.y, radius.bl);\n  ctx.arcTo(frame.x, frame.y, frame.x + frame.width, frame.y, radius.tl);\n  ctx.closePath();\n\n  if (style.overflow === 'hidden')\n    ctx.clip()\n\n  ctx.save()   // Draw Self Start\n  // Background color & Shadow\n  const background = style.backgroundColor || 'transparent'\n  if (background !== 'transparent') {\n    // Shadow:\n    if (style.shadowColor) {\n      ctx.shadowBlur = style.shadowBlur;\n      ctx.shadowColor = style.shadowColor;\n      ctx.shadowOffsetX = style.shadowOffsetX;\n      ctx.shadowOffsetY = style.shadowOffsetY;\n    }\n    ctx.fillStyle = background;\n    ctx.fill();\n  }\n\n  // Border with border radius:\n  if (style.borderColor && style.borderWidth > 0) {\n    ctx.lineWidth = style.borderWidth;\n    ctx.strokeStyle = style.borderColor;\n    ctx.stroke();\n  }\n  ctx.restore() // Draw Self  End\n\n  if (node.props.customDrawer) {\n    ctx.save() // Draw Inner\n    node.props.customDrawer(ctx, node);\n    ctx.restore()\n  }\n\n  // Draw child layers, sorted by their z-index.\n  node.children\n    .slice()\n    .sort(sortByZIndexAscending)\n    .forEach(child => {\n      drawNode(ctx, child);\n    });\n\n  ctx.restore()\n}","import React from 'react';\nimport { Text, View, Image, Touchable, ScrollView, LinearGradient } from '../revas';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.card} pointerEvents=\"box-none\">\n        <Image style={styles.logo}\n          src={require('./logo.png')} />\n        <Text style={styles.text} numberOfLines={2}>\n          Revas让你可以用React和Flexible CSS，在Canvas上绘制高性能交互式界面asdf1235 a sdfa sdfasdf～{'🎉'}\n        </Text>\n        <LinearGradient style={styles.decorator} colors={['#9254DE', '#B37FEB', '#91D5FF', '#40A9FF']} />\n        <Touchable style={styles.btn} onPress={() => alert('Enjoy!~🎉')}>\n          <Text style={styles.btnText}>Go</Text>\n        </Touchable>\n      </View>\n      <ScrollView style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}>\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n        <View style={{ height: 80, backgroundColor: '#9254DE' }} />\n        <View style={{ height: 80, backgroundColor: '#91D5FF' }} />\n        <View style={{ height: 80, backgroundColor: '#B37FEB' }} />\n        <View style={{ height: 80, backgroundColor: '#40A9FF' }} />\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#abcdef',\n  },\n  card: {\n    padding: 20,\n    margin: 10,\n    borderRadius: 10,\n    shadowBlur: 20,\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffsetX: 0,\n    shadowOffsetY: 5,\n    backgroundColor: '#fff',\n    // alignItems: 'center',\n    zIndex: 1,\n  },\n  decorator: {\n    height: 4, borderRadius: 2,\n    margin: 10, marginLeft: 40, marginRight: 40\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    textAlign: 'center',\n    // width: 280,\n    padding: 10,\n    paddingBottom: 0\n  },\n  logo: {\n    // width: 200,\n    height: 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    resizeMode: 'contain'\n  },\n  btn: {\n    justifyContent: 'center',\n    height: 40, backgroundColor: 'blue',\n    // width: 150\n  },\n  btnText: {\n    fontSize: 20,\n    textAlign: 'center',\n    height: 30,\n    lineHeight: 30,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL as string,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import renderer from '../core/reconciler'\nimport { noop } from '../core/utils'\nimport { Container } from '../core/Container'\nimport { RevasTouch, RevasTouchEvent } from '../core/Node'\n\nfunction createRevasTouchEvent(e: TouchEvent): RevasTouchEvent {\n  const touches: { [key: number]: RevasTouch } = {}\n  const type: any = e.type === 'touchcancel' ? 'touchend' : e.type\n  Object.values(e.changedTouches).forEach(touch => {\n    const { offsetLeft, offsetTop } = touch.target as HTMLCanvasElement\n    touches[touch.identifier] = {\n      identifier: touch.identifier,\n      x: touch.clientX - offsetLeft,\n      y: touch.clientY - offsetTop\n    }\n  })\n  return { type, touches, timestamp: e.timeStamp || Date.now() }\n}\n\nexport function render(app: React.ReactNode, canvas: HTMLCanvasElement) {\n  const container = new Container(canvas.getContext('2d'), canvas.clientWidth, canvas.clientHeight)\n  canvas.ontouchstart = canvas.ontouchmove = canvas.ontouchend =\n    canvas.ontouchcancel = e => container.handleTouch(createRevasTouchEvent(e))\n  canvas.onresize = e => container.handleResize(canvas.clientWidth, canvas.clientHeight)\n  const fiber = renderer.createContainer(container, false, false)\n  renderer.updateContainer(app, fiber, null, noop)\n  return {\n    unmount() {\n      renderer.updateContainer(null, fiber, null, noop)\n      canvas.ontouchstart = canvas.ontouchmove = canvas.ontouchend = null\n      container.destory()\n    }\n  }\n}\n","import React from 'react';\nimport { render } from './revas'\nimport App from './develop/App';\nimport * as serviceWorker from './develop/serviceWorker';\nimport createCanvas from './develop/createCanvas'\n\nimport './develop/index.css';\n\n// eslint-disable-next-line\nconst app = render(\n  React.createElement(App),\n  createCanvas()\n)\n\n// try unmount\n// setTimeout(() => {\n//   app.unmount()\n// }, 5000);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default function () {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')!\n  function onresize(e?: any) {\n    if (window.innerHeight > 0 && window.innerHeight > 0\n      && (window.innerHeight !== canvas.clientHeight\n        || window.innerWidth !== canvas.clientWidth)) {\n      const scale = window.devicePixelRatio\n      canvas.width = window.innerWidth * scale\n      canvas.height = window.innerHeight * scale\n      canvas.style.width = window.innerWidth + 'px'\n      canvas.style.height = window.innerHeight + 'px'\n      ctx.resetTransform()\n      ctx.scale(scale, scale)\n      e && canvas.onresize && canvas.onresize(e)\n    }\n  }\n  onresize()\n  canvas.className = 'canvas'\n  document.body.appendChild(canvas)\n  window.onorientationchange = window.onresize = () => requestAnimationFrame(onresize)// (e: any) => setTimeout(() => onresize(e), 500);\n  return canvas\n}\n"],"sourceRoot":""}